// Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import 'package:mxflutter/src/mirror/mx_mirror.dart';
import 'package:flutter/src/services/keyboard_key.dart';
import 'package:flutter/foundation.dart';

///把自己能处理的类注册到分发器中
Map<String, MXFunctionInvoke> registerKeyboardKeySeries() {
  var m = <String, MXFunctionInvoke>{};
  m[_logicalKeyboardKey.funName] = _logicalKeyboardKey;
  m[_logicalKeyboardKey_valueMask.funName] = _logicalKeyboardKey_valueMask;
  m[_logicalKeyboardKey_platformMask.funName] = _logicalKeyboardKey_platformMask;
  m[_logicalKeyboardKey_autogeneratedMask.funName] = _logicalKeyboardKey_autogeneratedMask;
  m[_logicalKeyboardKey_synonymMask.funName] = _logicalKeyboardKey_synonymMask;
  m[_logicalKeyboardKey_unicodePlane.funName] = _logicalKeyboardKey_unicodePlane;
  m[_logicalKeyboardKey_hidPlane.funName] = _logicalKeyboardKey_hidPlane;
  m[_logicalKeyboardKey_none.funName] = _logicalKeyboardKey_none;
  m[_logicalKeyboardKey_hyper.funName] = _logicalKeyboardKey_hyper;
  m[_logicalKeyboardKey_superKey.funName] = _logicalKeyboardKey_superKey;
  m[_logicalKeyboardKey_fnLock.funName] = _logicalKeyboardKey_fnLock;
  m[_logicalKeyboardKey_suspend.funName] = _logicalKeyboardKey_suspend;
  m[_logicalKeyboardKey_resume.funName] = _logicalKeyboardKey_resume;
  m[_logicalKeyboardKey_turbo.funName] = _logicalKeyboardKey_turbo;
  m[_logicalKeyboardKey_privacyScreenToggle.funName] = _logicalKeyboardKey_privacyScreenToggle;
  m[_logicalKeyboardKey_sleep.funName] = _logicalKeyboardKey_sleep;
  m[_logicalKeyboardKey_wakeUp.funName] = _logicalKeyboardKey_wakeUp;
  m[_logicalKeyboardKey_displayToggleIntExt.funName] = _logicalKeyboardKey_displayToggleIntExt;
  m[_logicalKeyboardKey_usbReserved.funName] = _logicalKeyboardKey_usbReserved;
  m[_logicalKeyboardKey_usbErrorRollOver.funName] = _logicalKeyboardKey_usbErrorRollOver;
  m[_logicalKeyboardKey_usbPostFail.funName] = _logicalKeyboardKey_usbPostFail;
  m[_logicalKeyboardKey_usbErrorUndefined.funName] = _logicalKeyboardKey_usbErrorUndefined;
  m[_logicalKeyboardKey_keyA.funName] = _logicalKeyboardKey_keyA;
  m[_logicalKeyboardKey_keyB.funName] = _logicalKeyboardKey_keyB;
  m[_logicalKeyboardKey_keyC.funName] = _logicalKeyboardKey_keyC;
  m[_logicalKeyboardKey_keyD.funName] = _logicalKeyboardKey_keyD;
  m[_logicalKeyboardKey_keyE.funName] = _logicalKeyboardKey_keyE;
  m[_logicalKeyboardKey_keyF.funName] = _logicalKeyboardKey_keyF;
  m[_logicalKeyboardKey_keyG.funName] = _logicalKeyboardKey_keyG;
  m[_logicalKeyboardKey_keyH.funName] = _logicalKeyboardKey_keyH;
  m[_logicalKeyboardKey_keyI.funName] = _logicalKeyboardKey_keyI;
  m[_logicalKeyboardKey_keyJ.funName] = _logicalKeyboardKey_keyJ;
  m[_logicalKeyboardKey_keyK.funName] = _logicalKeyboardKey_keyK;
  m[_logicalKeyboardKey_keyL.funName] = _logicalKeyboardKey_keyL;
  m[_logicalKeyboardKey_keyM.funName] = _logicalKeyboardKey_keyM;
  m[_logicalKeyboardKey_keyN.funName] = _logicalKeyboardKey_keyN;
  m[_logicalKeyboardKey_keyO.funName] = _logicalKeyboardKey_keyO;
  m[_logicalKeyboardKey_keyP.funName] = _logicalKeyboardKey_keyP;
  m[_logicalKeyboardKey_keyQ.funName] = _logicalKeyboardKey_keyQ;
  m[_logicalKeyboardKey_keyR.funName] = _logicalKeyboardKey_keyR;
  m[_logicalKeyboardKey_keyS.funName] = _logicalKeyboardKey_keyS;
  m[_logicalKeyboardKey_keyT.funName] = _logicalKeyboardKey_keyT;
  m[_logicalKeyboardKey_keyU.funName] = _logicalKeyboardKey_keyU;
  m[_logicalKeyboardKey_keyV.funName] = _logicalKeyboardKey_keyV;
  m[_logicalKeyboardKey_keyW.funName] = _logicalKeyboardKey_keyW;
  m[_logicalKeyboardKey_keyX.funName] = _logicalKeyboardKey_keyX;
  m[_logicalKeyboardKey_keyY.funName] = _logicalKeyboardKey_keyY;
  m[_logicalKeyboardKey_keyZ.funName] = _logicalKeyboardKey_keyZ;
  m[_logicalKeyboardKey_digit1.funName] = _logicalKeyboardKey_digit1;
  m[_logicalKeyboardKey_digit2.funName] = _logicalKeyboardKey_digit2;
  m[_logicalKeyboardKey_digit3.funName] = _logicalKeyboardKey_digit3;
  m[_logicalKeyboardKey_digit4.funName] = _logicalKeyboardKey_digit4;
  m[_logicalKeyboardKey_digit5.funName] = _logicalKeyboardKey_digit5;
  m[_logicalKeyboardKey_digit6.funName] = _logicalKeyboardKey_digit6;
  m[_logicalKeyboardKey_digit7.funName] = _logicalKeyboardKey_digit7;
  m[_logicalKeyboardKey_digit8.funName] = _logicalKeyboardKey_digit8;
  m[_logicalKeyboardKey_digit9.funName] = _logicalKeyboardKey_digit9;
  m[_logicalKeyboardKey_digit0.funName] = _logicalKeyboardKey_digit0;
  m[_logicalKeyboardKey_enter.funName] = _logicalKeyboardKey_enter;
  m[_logicalKeyboardKey_escape.funName] = _logicalKeyboardKey_escape;
  m[_logicalKeyboardKey_backspace.funName] = _logicalKeyboardKey_backspace;
  m[_logicalKeyboardKey_tab.funName] = _logicalKeyboardKey_tab;
  m[_logicalKeyboardKey_space.funName] = _logicalKeyboardKey_space;
  m[_logicalKeyboardKey_minus.funName] = _logicalKeyboardKey_minus;
  m[_logicalKeyboardKey_equal.funName] = _logicalKeyboardKey_equal;
  m[_logicalKeyboardKey_bracketLeft.funName] = _logicalKeyboardKey_bracketLeft;
  m[_logicalKeyboardKey_bracketRight.funName] = _logicalKeyboardKey_bracketRight;
  m[_logicalKeyboardKey_backslash.funName] = _logicalKeyboardKey_backslash;
  m[_logicalKeyboardKey_semicolon.funName] = _logicalKeyboardKey_semicolon;
  m[_logicalKeyboardKey_quote.funName] = _logicalKeyboardKey_quote;
  m[_logicalKeyboardKey_backquote.funName] = _logicalKeyboardKey_backquote;
  m[_logicalKeyboardKey_comma.funName] = _logicalKeyboardKey_comma;
  m[_logicalKeyboardKey_period.funName] = _logicalKeyboardKey_period;
  m[_logicalKeyboardKey_slash.funName] = _logicalKeyboardKey_slash;
  m[_logicalKeyboardKey_capsLock.funName] = _logicalKeyboardKey_capsLock;
  m[_logicalKeyboardKey_f1.funName] = _logicalKeyboardKey_f1;
  m[_logicalKeyboardKey_f2.funName] = _logicalKeyboardKey_f2;
  m[_logicalKeyboardKey_f3.funName] = _logicalKeyboardKey_f3;
  m[_logicalKeyboardKey_f4.funName] = _logicalKeyboardKey_f4;
  m[_logicalKeyboardKey_f5.funName] = _logicalKeyboardKey_f5;
  m[_logicalKeyboardKey_f6.funName] = _logicalKeyboardKey_f6;
  m[_logicalKeyboardKey_f7.funName] = _logicalKeyboardKey_f7;
  m[_logicalKeyboardKey_f8.funName] = _logicalKeyboardKey_f8;
  m[_logicalKeyboardKey_f9.funName] = _logicalKeyboardKey_f9;
  m[_logicalKeyboardKey_f10.funName] = _logicalKeyboardKey_f10;
  m[_logicalKeyboardKey_f11.funName] = _logicalKeyboardKey_f11;
  m[_logicalKeyboardKey_f12.funName] = _logicalKeyboardKey_f12;
  m[_logicalKeyboardKey_printScreen.funName] = _logicalKeyboardKey_printScreen;
  m[_logicalKeyboardKey_scrollLock.funName] = _logicalKeyboardKey_scrollLock;
  m[_logicalKeyboardKey_pause.funName] = _logicalKeyboardKey_pause;
  m[_logicalKeyboardKey_insert.funName] = _logicalKeyboardKey_insert;
  m[_logicalKeyboardKey_home.funName] = _logicalKeyboardKey_home;
  m[_logicalKeyboardKey_pageUp.funName] = _logicalKeyboardKey_pageUp;
  m[_logicalKeyboardKey_delete.funName] = _logicalKeyboardKey_delete;
  m[_logicalKeyboardKey_end.funName] = _logicalKeyboardKey_end;
  m[_logicalKeyboardKey_pageDown.funName] = _logicalKeyboardKey_pageDown;
  m[_logicalKeyboardKey_arrowRight.funName] = _logicalKeyboardKey_arrowRight;
  m[_logicalKeyboardKey_arrowLeft.funName] = _logicalKeyboardKey_arrowLeft;
  m[_logicalKeyboardKey_arrowDown.funName] = _logicalKeyboardKey_arrowDown;
  m[_logicalKeyboardKey_arrowUp.funName] = _logicalKeyboardKey_arrowUp;
  m[_logicalKeyboardKey_numLock.funName] = _logicalKeyboardKey_numLock;
  m[_logicalKeyboardKey_numpadDivide.funName] = _logicalKeyboardKey_numpadDivide;
  m[_logicalKeyboardKey_numpadMultiply.funName] = _logicalKeyboardKey_numpadMultiply;
  m[_logicalKeyboardKey_numpadSubtract.funName] = _logicalKeyboardKey_numpadSubtract;
  m[_logicalKeyboardKey_numpadAdd.funName] = _logicalKeyboardKey_numpadAdd;
  m[_logicalKeyboardKey_numpadEnter.funName] = _logicalKeyboardKey_numpadEnter;
  m[_logicalKeyboardKey_numpad1.funName] = _logicalKeyboardKey_numpad1;
  m[_logicalKeyboardKey_numpad2.funName] = _logicalKeyboardKey_numpad2;
  m[_logicalKeyboardKey_numpad3.funName] = _logicalKeyboardKey_numpad3;
  m[_logicalKeyboardKey_numpad4.funName] = _logicalKeyboardKey_numpad4;
  m[_logicalKeyboardKey_numpad5.funName] = _logicalKeyboardKey_numpad5;
  m[_logicalKeyboardKey_numpad6.funName] = _logicalKeyboardKey_numpad6;
  m[_logicalKeyboardKey_numpad7.funName] = _logicalKeyboardKey_numpad7;
  m[_logicalKeyboardKey_numpad8.funName] = _logicalKeyboardKey_numpad8;
  m[_logicalKeyboardKey_numpad9.funName] = _logicalKeyboardKey_numpad9;
  m[_logicalKeyboardKey_numpad0.funName] = _logicalKeyboardKey_numpad0;
  m[_logicalKeyboardKey_numpadDecimal.funName] = _logicalKeyboardKey_numpadDecimal;
  m[_logicalKeyboardKey_intlBackslash.funName] = _logicalKeyboardKey_intlBackslash;
  m[_logicalKeyboardKey_contextMenu.funName] = _logicalKeyboardKey_contextMenu;
  m[_logicalKeyboardKey_power.funName] = _logicalKeyboardKey_power;
  m[_logicalKeyboardKey_numpadEqual.funName] = _logicalKeyboardKey_numpadEqual;
  m[_logicalKeyboardKey_f13.funName] = _logicalKeyboardKey_f13;
  m[_logicalKeyboardKey_f14.funName] = _logicalKeyboardKey_f14;
  m[_logicalKeyboardKey_f15.funName] = _logicalKeyboardKey_f15;
  m[_logicalKeyboardKey_f16.funName] = _logicalKeyboardKey_f16;
  m[_logicalKeyboardKey_f17.funName] = _logicalKeyboardKey_f17;
  m[_logicalKeyboardKey_f18.funName] = _logicalKeyboardKey_f18;
  m[_logicalKeyboardKey_f19.funName] = _logicalKeyboardKey_f19;
  m[_logicalKeyboardKey_f20.funName] = _logicalKeyboardKey_f20;
  m[_logicalKeyboardKey_f21.funName] = _logicalKeyboardKey_f21;
  m[_logicalKeyboardKey_f22.funName] = _logicalKeyboardKey_f22;
  m[_logicalKeyboardKey_f23.funName] = _logicalKeyboardKey_f23;
  m[_logicalKeyboardKey_f24.funName] = _logicalKeyboardKey_f24;
  m[_logicalKeyboardKey_open.funName] = _logicalKeyboardKey_open;
  m[_logicalKeyboardKey_help.funName] = _logicalKeyboardKey_help;
  m[_logicalKeyboardKey_select.funName] = _logicalKeyboardKey_select;
  m[_logicalKeyboardKey_again.funName] = _logicalKeyboardKey_again;
  m[_logicalKeyboardKey_undo.funName] = _logicalKeyboardKey_undo;
  m[_logicalKeyboardKey_cut.funName] = _logicalKeyboardKey_cut;
  m[_logicalKeyboardKey_copy.funName] = _logicalKeyboardKey_copy;
  m[_logicalKeyboardKey_paste.funName] = _logicalKeyboardKey_paste;
  m[_logicalKeyboardKey_find.funName] = _logicalKeyboardKey_find;
  m[_logicalKeyboardKey_audioVolumeMute.funName] = _logicalKeyboardKey_audioVolumeMute;
  m[_logicalKeyboardKey_audioVolumeUp.funName] = _logicalKeyboardKey_audioVolumeUp;
  m[_logicalKeyboardKey_audioVolumeDown.funName] = _logicalKeyboardKey_audioVolumeDown;
  m[_logicalKeyboardKey_numpadComma.funName] = _logicalKeyboardKey_numpadComma;
  m[_logicalKeyboardKey_intlRo.funName] = _logicalKeyboardKey_intlRo;
  m[_logicalKeyboardKey_kanaMode.funName] = _logicalKeyboardKey_kanaMode;
  m[_logicalKeyboardKey_intlYen.funName] = _logicalKeyboardKey_intlYen;
  m[_logicalKeyboardKey_convert.funName] = _logicalKeyboardKey_convert;
  m[_logicalKeyboardKey_nonConvert.funName] = _logicalKeyboardKey_nonConvert;
  m[_logicalKeyboardKey_lang1.funName] = _logicalKeyboardKey_lang1;
  m[_logicalKeyboardKey_lang2.funName] = _logicalKeyboardKey_lang2;
  m[_logicalKeyboardKey_lang3.funName] = _logicalKeyboardKey_lang3;
  m[_logicalKeyboardKey_lang4.funName] = _logicalKeyboardKey_lang4;
  m[_logicalKeyboardKey_lang5.funName] = _logicalKeyboardKey_lang5;
  m[_logicalKeyboardKey_abort.funName] = _logicalKeyboardKey_abort;
  m[_logicalKeyboardKey_props.funName] = _logicalKeyboardKey_props;
  m[_logicalKeyboardKey_numpadParenLeft.funName] = _logicalKeyboardKey_numpadParenLeft;
  m[_logicalKeyboardKey_numpadParenRight.funName] = _logicalKeyboardKey_numpadParenRight;
  m[_logicalKeyboardKey_numpadBackspace.funName] = _logicalKeyboardKey_numpadBackspace;
  m[_logicalKeyboardKey_numpadMemoryStore.funName] = _logicalKeyboardKey_numpadMemoryStore;
  m[_logicalKeyboardKey_numpadMemoryRecall.funName] = _logicalKeyboardKey_numpadMemoryRecall;
  m[_logicalKeyboardKey_numpadMemoryClear.funName] = _logicalKeyboardKey_numpadMemoryClear;
  m[_logicalKeyboardKey_numpadMemoryAdd.funName] = _logicalKeyboardKey_numpadMemoryAdd;
  m[_logicalKeyboardKey_numpadMemorySubtract.funName] = _logicalKeyboardKey_numpadMemorySubtract;
  m[_logicalKeyboardKey_numpadSignChange.funName] = _logicalKeyboardKey_numpadSignChange;
  m[_logicalKeyboardKey_numpadClear.funName] = _logicalKeyboardKey_numpadClear;
  m[_logicalKeyboardKey_numpadClearEntry.funName] = _logicalKeyboardKey_numpadClearEntry;
  m[_logicalKeyboardKey_controlLeft.funName] = _logicalKeyboardKey_controlLeft;
  m[_logicalKeyboardKey_shiftLeft.funName] = _logicalKeyboardKey_shiftLeft;
  m[_logicalKeyboardKey_altLeft.funName] = _logicalKeyboardKey_altLeft;
  m[_logicalKeyboardKey_metaLeft.funName] = _logicalKeyboardKey_metaLeft;
  m[_logicalKeyboardKey_controlRight.funName] = _logicalKeyboardKey_controlRight;
  m[_logicalKeyboardKey_shiftRight.funName] = _logicalKeyboardKey_shiftRight;
  m[_logicalKeyboardKey_altRight.funName] = _logicalKeyboardKey_altRight;
  m[_logicalKeyboardKey_metaRight.funName] = _logicalKeyboardKey_metaRight;
  m[_logicalKeyboardKey_info.funName] = _logicalKeyboardKey_info;
  m[_logicalKeyboardKey_closedCaptionToggle.funName] = _logicalKeyboardKey_closedCaptionToggle;
  m[_logicalKeyboardKey_brightnessUp.funName] = _logicalKeyboardKey_brightnessUp;
  m[_logicalKeyboardKey_brightnessDown.funName] = _logicalKeyboardKey_brightnessDown;
  m[_logicalKeyboardKey_brightnessToggle.funName] = _logicalKeyboardKey_brightnessToggle;
  m[_logicalKeyboardKey_brightnessMinimum.funName] = _logicalKeyboardKey_brightnessMinimum;
  m[_logicalKeyboardKey_brightnessMaximum.funName] = _logicalKeyboardKey_brightnessMaximum;
  m[_logicalKeyboardKey_brightnessAuto.funName] = _logicalKeyboardKey_brightnessAuto;
  m[_logicalKeyboardKey_kbdIllumUp.funName] = _logicalKeyboardKey_kbdIllumUp;
  m[_logicalKeyboardKey_kbdIllumDown.funName] = _logicalKeyboardKey_kbdIllumDown;
  m[_logicalKeyboardKey_mediaLast.funName] = _logicalKeyboardKey_mediaLast;
  m[_logicalKeyboardKey_launchPhone.funName] = _logicalKeyboardKey_launchPhone;
  m[_logicalKeyboardKey_programGuide.funName] = _logicalKeyboardKey_programGuide;
  m[_logicalKeyboardKey_exit.funName] = _logicalKeyboardKey_exit;
  m[_logicalKeyboardKey_channelUp.funName] = _logicalKeyboardKey_channelUp;
  m[_logicalKeyboardKey_channelDown.funName] = _logicalKeyboardKey_channelDown;
  m[_logicalKeyboardKey_mediaPlay.funName] = _logicalKeyboardKey_mediaPlay;
  m[_logicalKeyboardKey_mediaPause.funName] = _logicalKeyboardKey_mediaPause;
  m[_logicalKeyboardKey_mediaRecord.funName] = _logicalKeyboardKey_mediaRecord;
  m[_logicalKeyboardKey_mediaFastForward.funName] = _logicalKeyboardKey_mediaFastForward;
  m[_logicalKeyboardKey_mediaRewind.funName] = _logicalKeyboardKey_mediaRewind;
  m[_logicalKeyboardKey_mediaTrackNext.funName] = _logicalKeyboardKey_mediaTrackNext;
  m[_logicalKeyboardKey_mediaTrackPrevious.funName] = _logicalKeyboardKey_mediaTrackPrevious;
  m[_logicalKeyboardKey_mediaStop.funName] = _logicalKeyboardKey_mediaStop;
  m[_logicalKeyboardKey_eject.funName] = _logicalKeyboardKey_eject;
  m[_logicalKeyboardKey_mediaPlayPause.funName] = _logicalKeyboardKey_mediaPlayPause;
  m[_logicalKeyboardKey_speechInputToggle.funName] = _logicalKeyboardKey_speechInputToggle;
  m[_logicalKeyboardKey_bassBoost.funName] = _logicalKeyboardKey_bassBoost;
  m[_logicalKeyboardKey_mediaSelect.funName] = _logicalKeyboardKey_mediaSelect;
  m[_logicalKeyboardKey_launchWordProcessor.funName] = _logicalKeyboardKey_launchWordProcessor;
  m[_logicalKeyboardKey_launchSpreadsheet.funName] = _logicalKeyboardKey_launchSpreadsheet;
  m[_logicalKeyboardKey_launchMail.funName] = _logicalKeyboardKey_launchMail;
  m[_logicalKeyboardKey_launchContacts.funName] = _logicalKeyboardKey_launchContacts;
  m[_logicalKeyboardKey_launchCalendar.funName] = _logicalKeyboardKey_launchCalendar;
  m[_logicalKeyboardKey_launchApp2.funName] = _logicalKeyboardKey_launchApp2;
  m[_logicalKeyboardKey_launchApp1.funName] = _logicalKeyboardKey_launchApp1;
  m[_logicalKeyboardKey_launchInternetBrowser.funName] = _logicalKeyboardKey_launchInternetBrowser;
  m[_logicalKeyboardKey_logOff.funName] = _logicalKeyboardKey_logOff;
  m[_logicalKeyboardKey_lockScreen.funName] = _logicalKeyboardKey_lockScreen;
  m[_logicalKeyboardKey_launchControlPanel.funName] = _logicalKeyboardKey_launchControlPanel;
  m[_logicalKeyboardKey_selectTask.funName] = _logicalKeyboardKey_selectTask;
  m[_logicalKeyboardKey_launchDocuments.funName] = _logicalKeyboardKey_launchDocuments;
  m[_logicalKeyboardKey_spellCheck.funName] = _logicalKeyboardKey_spellCheck;
  m[_logicalKeyboardKey_launchKeyboardLayout.funName] = _logicalKeyboardKey_launchKeyboardLayout;
  m[_logicalKeyboardKey_launchScreenSaver.funName] = _logicalKeyboardKey_launchScreenSaver;
  m[_logicalKeyboardKey_launchAssistant.funName] = _logicalKeyboardKey_launchAssistant;
  m[_logicalKeyboardKey_launchAudioBrowser.funName] = _logicalKeyboardKey_launchAudioBrowser;
  m[_logicalKeyboardKey_newKey.funName] = _logicalKeyboardKey_newKey;
  m[_logicalKeyboardKey_close.funName] = _logicalKeyboardKey_close;
  m[_logicalKeyboardKey_save.funName] = _logicalKeyboardKey_save;
  m[_logicalKeyboardKey_print.funName] = _logicalKeyboardKey_print;
  m[_logicalKeyboardKey_browserSearch.funName] = _logicalKeyboardKey_browserSearch;
  m[_logicalKeyboardKey_browserHome.funName] = _logicalKeyboardKey_browserHome;
  m[_logicalKeyboardKey_browserBack.funName] = _logicalKeyboardKey_browserBack;
  m[_logicalKeyboardKey_browserForward.funName] = _logicalKeyboardKey_browserForward;
  m[_logicalKeyboardKey_browserStop.funName] = _logicalKeyboardKey_browserStop;
  m[_logicalKeyboardKey_browserRefresh.funName] = _logicalKeyboardKey_browserRefresh;
  m[_logicalKeyboardKey_browserFavorites.funName] = _logicalKeyboardKey_browserFavorites;
  m[_logicalKeyboardKey_zoomIn.funName] = _logicalKeyboardKey_zoomIn;
  m[_logicalKeyboardKey_zoomOut.funName] = _logicalKeyboardKey_zoomOut;
  m[_logicalKeyboardKey_zoomToggle.funName] = _logicalKeyboardKey_zoomToggle;
  m[_logicalKeyboardKey_redo.funName] = _logicalKeyboardKey_redo;
  m[_logicalKeyboardKey_mailReply.funName] = _logicalKeyboardKey_mailReply;
  m[_logicalKeyboardKey_mailForward.funName] = _logicalKeyboardKey_mailForward;
  m[_logicalKeyboardKey_mailSend.funName] = _logicalKeyboardKey_mailSend;
  m[_logicalKeyboardKey_keyboardLayoutSelect.funName] = _logicalKeyboardKey_keyboardLayoutSelect;
  m[_logicalKeyboardKey_showAllWindows.funName] = _logicalKeyboardKey_showAllWindows;
  m[_logicalKeyboardKey_gameButton1.funName] = _logicalKeyboardKey_gameButton1;
  m[_logicalKeyboardKey_gameButton2.funName] = _logicalKeyboardKey_gameButton2;
  m[_logicalKeyboardKey_gameButton3.funName] = _logicalKeyboardKey_gameButton3;
  m[_logicalKeyboardKey_gameButton4.funName] = _logicalKeyboardKey_gameButton4;
  m[_logicalKeyboardKey_gameButton5.funName] = _logicalKeyboardKey_gameButton5;
  m[_logicalKeyboardKey_gameButton6.funName] = _logicalKeyboardKey_gameButton6;
  m[_logicalKeyboardKey_gameButton7.funName] = _logicalKeyboardKey_gameButton7;
  m[_logicalKeyboardKey_gameButton8.funName] = _logicalKeyboardKey_gameButton8;
  m[_logicalKeyboardKey_gameButton9.funName] = _logicalKeyboardKey_gameButton9;
  m[_logicalKeyboardKey_gameButton10.funName] = _logicalKeyboardKey_gameButton10;
  m[_logicalKeyboardKey_gameButton11.funName] = _logicalKeyboardKey_gameButton11;
  m[_logicalKeyboardKey_gameButton12.funName] = _logicalKeyboardKey_gameButton12;
  m[_logicalKeyboardKey_gameButton13.funName] = _logicalKeyboardKey_gameButton13;
  m[_logicalKeyboardKey_gameButton14.funName] = _logicalKeyboardKey_gameButton14;
  m[_logicalKeyboardKey_gameButton15.funName] = _logicalKeyboardKey_gameButton15;
  m[_logicalKeyboardKey_gameButton16.funName] = _logicalKeyboardKey_gameButton16;
  m[_logicalKeyboardKey_gameButtonA.funName] = _logicalKeyboardKey_gameButtonA;
  m[_logicalKeyboardKey_gameButtonB.funName] = _logicalKeyboardKey_gameButtonB;
  m[_logicalKeyboardKey_gameButtonC.funName] = _logicalKeyboardKey_gameButtonC;
  m[_logicalKeyboardKey_gameButtonLeft1.funName] = _logicalKeyboardKey_gameButtonLeft1;
  m[_logicalKeyboardKey_gameButtonLeft2.funName] = _logicalKeyboardKey_gameButtonLeft2;
  m[_logicalKeyboardKey_gameButtonMode.funName] = _logicalKeyboardKey_gameButtonMode;
  m[_logicalKeyboardKey_gameButtonRight1.funName] = _logicalKeyboardKey_gameButtonRight1;
  m[_logicalKeyboardKey_gameButtonRight2.funName] = _logicalKeyboardKey_gameButtonRight2;
  m[_logicalKeyboardKey_gameButtonSelect.funName] = _logicalKeyboardKey_gameButtonSelect;
  m[_logicalKeyboardKey_gameButtonStart.funName] = _logicalKeyboardKey_gameButtonStart;
  m[_logicalKeyboardKey_gameButtonThumbLeft.funName] = _logicalKeyboardKey_gameButtonThumbLeft;
  m[_logicalKeyboardKey_gameButtonThumbRight.funName] = _logicalKeyboardKey_gameButtonThumbRight;
  m[_logicalKeyboardKey_gameButtonX.funName] = _logicalKeyboardKey_gameButtonX;
  m[_logicalKeyboardKey_gameButtonY.funName] = _logicalKeyboardKey_gameButtonY;
  m[_logicalKeyboardKey_gameButtonZ.funName] = _logicalKeyboardKey_gameButtonZ;
  m[_logicalKeyboardKey_fn.funName] = _logicalKeyboardKey_fn;
  m[_logicalKeyboardKey_shift.funName] = _logicalKeyboardKey_shift;
  m[_logicalKeyboardKey_meta.funName] = _logicalKeyboardKey_meta;
  m[_logicalKeyboardKey_alt.funName] = _logicalKeyboardKey_alt;
  m[_logicalKeyboardKey_control.funName] = _logicalKeyboardKey_control;
  m[_physicalKeyboardKey.funName] = _physicalKeyboardKey;
  m[_physicalKeyboardKey_none.funName] = _physicalKeyboardKey_none;
  m[_physicalKeyboardKey_hyper.funName] = _physicalKeyboardKey_hyper;
  m[_physicalKeyboardKey_superKey.funName] = _physicalKeyboardKey_superKey;
  m[_physicalKeyboardKey_fnLock.funName] = _physicalKeyboardKey_fnLock;
  m[_physicalKeyboardKey_suspend.funName] = _physicalKeyboardKey_suspend;
  m[_physicalKeyboardKey_resume.funName] = _physicalKeyboardKey_resume;
  m[_physicalKeyboardKey_turbo.funName] = _physicalKeyboardKey_turbo;
  m[_physicalKeyboardKey_privacyScreenToggle.funName] = _physicalKeyboardKey_privacyScreenToggle;
  m[_physicalKeyboardKey_sleep.funName] = _physicalKeyboardKey_sleep;
  m[_physicalKeyboardKey_wakeUp.funName] = _physicalKeyboardKey_wakeUp;
  m[_physicalKeyboardKey_displayToggleIntExt.funName] = _physicalKeyboardKey_displayToggleIntExt;
  m[_physicalKeyboardKey_usbReserved.funName] = _physicalKeyboardKey_usbReserved;
  m[_physicalKeyboardKey_usbErrorRollOver.funName] = _physicalKeyboardKey_usbErrorRollOver;
  m[_physicalKeyboardKey_usbPostFail.funName] = _physicalKeyboardKey_usbPostFail;
  m[_physicalKeyboardKey_usbErrorUndefined.funName] = _physicalKeyboardKey_usbErrorUndefined;
  m[_physicalKeyboardKey_keyA.funName] = _physicalKeyboardKey_keyA;
  m[_physicalKeyboardKey_keyB.funName] = _physicalKeyboardKey_keyB;
  m[_physicalKeyboardKey_keyC.funName] = _physicalKeyboardKey_keyC;
  m[_physicalKeyboardKey_keyD.funName] = _physicalKeyboardKey_keyD;
  m[_physicalKeyboardKey_keyE.funName] = _physicalKeyboardKey_keyE;
  m[_physicalKeyboardKey_keyF.funName] = _physicalKeyboardKey_keyF;
  m[_physicalKeyboardKey_keyG.funName] = _physicalKeyboardKey_keyG;
  m[_physicalKeyboardKey_keyH.funName] = _physicalKeyboardKey_keyH;
  m[_physicalKeyboardKey_keyI.funName] = _physicalKeyboardKey_keyI;
  m[_physicalKeyboardKey_keyJ.funName] = _physicalKeyboardKey_keyJ;
  m[_physicalKeyboardKey_keyK.funName] = _physicalKeyboardKey_keyK;
  m[_physicalKeyboardKey_keyL.funName] = _physicalKeyboardKey_keyL;
  m[_physicalKeyboardKey_keyM.funName] = _physicalKeyboardKey_keyM;
  m[_physicalKeyboardKey_keyN.funName] = _physicalKeyboardKey_keyN;
  m[_physicalKeyboardKey_keyO.funName] = _physicalKeyboardKey_keyO;
  m[_physicalKeyboardKey_keyP.funName] = _physicalKeyboardKey_keyP;
  m[_physicalKeyboardKey_keyQ.funName] = _physicalKeyboardKey_keyQ;
  m[_physicalKeyboardKey_keyR.funName] = _physicalKeyboardKey_keyR;
  m[_physicalKeyboardKey_keyS.funName] = _physicalKeyboardKey_keyS;
  m[_physicalKeyboardKey_keyT.funName] = _physicalKeyboardKey_keyT;
  m[_physicalKeyboardKey_keyU.funName] = _physicalKeyboardKey_keyU;
  m[_physicalKeyboardKey_keyV.funName] = _physicalKeyboardKey_keyV;
  m[_physicalKeyboardKey_keyW.funName] = _physicalKeyboardKey_keyW;
  m[_physicalKeyboardKey_keyX.funName] = _physicalKeyboardKey_keyX;
  m[_physicalKeyboardKey_keyY.funName] = _physicalKeyboardKey_keyY;
  m[_physicalKeyboardKey_keyZ.funName] = _physicalKeyboardKey_keyZ;
  m[_physicalKeyboardKey_digit1.funName] = _physicalKeyboardKey_digit1;
  m[_physicalKeyboardKey_digit2.funName] = _physicalKeyboardKey_digit2;
  m[_physicalKeyboardKey_digit3.funName] = _physicalKeyboardKey_digit3;
  m[_physicalKeyboardKey_digit4.funName] = _physicalKeyboardKey_digit4;
  m[_physicalKeyboardKey_digit5.funName] = _physicalKeyboardKey_digit5;
  m[_physicalKeyboardKey_digit6.funName] = _physicalKeyboardKey_digit6;
  m[_physicalKeyboardKey_digit7.funName] = _physicalKeyboardKey_digit7;
  m[_physicalKeyboardKey_digit8.funName] = _physicalKeyboardKey_digit8;
  m[_physicalKeyboardKey_digit9.funName] = _physicalKeyboardKey_digit9;
  m[_physicalKeyboardKey_digit0.funName] = _physicalKeyboardKey_digit0;
  m[_physicalKeyboardKey_enter.funName] = _physicalKeyboardKey_enter;
  m[_physicalKeyboardKey_escape.funName] = _physicalKeyboardKey_escape;
  m[_physicalKeyboardKey_backspace.funName] = _physicalKeyboardKey_backspace;
  m[_physicalKeyboardKey_tab.funName] = _physicalKeyboardKey_tab;
  m[_physicalKeyboardKey_space.funName] = _physicalKeyboardKey_space;
  m[_physicalKeyboardKey_minus.funName] = _physicalKeyboardKey_minus;
  m[_physicalKeyboardKey_equal.funName] = _physicalKeyboardKey_equal;
  m[_physicalKeyboardKey_bracketLeft.funName] = _physicalKeyboardKey_bracketLeft;
  m[_physicalKeyboardKey_bracketRight.funName] = _physicalKeyboardKey_bracketRight;
  m[_physicalKeyboardKey_backslash.funName] = _physicalKeyboardKey_backslash;
  m[_physicalKeyboardKey_semicolon.funName] = _physicalKeyboardKey_semicolon;
  m[_physicalKeyboardKey_quote.funName] = _physicalKeyboardKey_quote;
  m[_physicalKeyboardKey_backquote.funName] = _physicalKeyboardKey_backquote;
  m[_physicalKeyboardKey_comma.funName] = _physicalKeyboardKey_comma;
  m[_physicalKeyboardKey_period.funName] = _physicalKeyboardKey_period;
  m[_physicalKeyboardKey_slash.funName] = _physicalKeyboardKey_slash;
  m[_physicalKeyboardKey_capsLock.funName] = _physicalKeyboardKey_capsLock;
  m[_physicalKeyboardKey_f1.funName] = _physicalKeyboardKey_f1;
  m[_physicalKeyboardKey_f2.funName] = _physicalKeyboardKey_f2;
  m[_physicalKeyboardKey_f3.funName] = _physicalKeyboardKey_f3;
  m[_physicalKeyboardKey_f4.funName] = _physicalKeyboardKey_f4;
  m[_physicalKeyboardKey_f5.funName] = _physicalKeyboardKey_f5;
  m[_physicalKeyboardKey_f6.funName] = _physicalKeyboardKey_f6;
  m[_physicalKeyboardKey_f7.funName] = _physicalKeyboardKey_f7;
  m[_physicalKeyboardKey_f8.funName] = _physicalKeyboardKey_f8;
  m[_physicalKeyboardKey_f9.funName] = _physicalKeyboardKey_f9;
  m[_physicalKeyboardKey_f10.funName] = _physicalKeyboardKey_f10;
  m[_physicalKeyboardKey_f11.funName] = _physicalKeyboardKey_f11;
  m[_physicalKeyboardKey_f12.funName] = _physicalKeyboardKey_f12;
  m[_physicalKeyboardKey_printScreen.funName] = _physicalKeyboardKey_printScreen;
  m[_physicalKeyboardKey_scrollLock.funName] = _physicalKeyboardKey_scrollLock;
  m[_physicalKeyboardKey_pause.funName] = _physicalKeyboardKey_pause;
  m[_physicalKeyboardKey_insert.funName] = _physicalKeyboardKey_insert;
  m[_physicalKeyboardKey_home.funName] = _physicalKeyboardKey_home;
  m[_physicalKeyboardKey_pageUp.funName] = _physicalKeyboardKey_pageUp;
  m[_physicalKeyboardKey_delete.funName] = _physicalKeyboardKey_delete;
  m[_physicalKeyboardKey_end.funName] = _physicalKeyboardKey_end;
  m[_physicalKeyboardKey_pageDown.funName] = _physicalKeyboardKey_pageDown;
  m[_physicalKeyboardKey_arrowRight.funName] = _physicalKeyboardKey_arrowRight;
  m[_physicalKeyboardKey_arrowLeft.funName] = _physicalKeyboardKey_arrowLeft;
  m[_physicalKeyboardKey_arrowDown.funName] = _physicalKeyboardKey_arrowDown;
  m[_physicalKeyboardKey_arrowUp.funName] = _physicalKeyboardKey_arrowUp;
  m[_physicalKeyboardKey_numLock.funName] = _physicalKeyboardKey_numLock;
  m[_physicalKeyboardKey_numpadDivide.funName] = _physicalKeyboardKey_numpadDivide;
  m[_physicalKeyboardKey_numpadMultiply.funName] = _physicalKeyboardKey_numpadMultiply;
  m[_physicalKeyboardKey_numpadSubtract.funName] = _physicalKeyboardKey_numpadSubtract;
  m[_physicalKeyboardKey_numpadAdd.funName] = _physicalKeyboardKey_numpadAdd;
  m[_physicalKeyboardKey_numpadEnter.funName] = _physicalKeyboardKey_numpadEnter;
  m[_physicalKeyboardKey_numpad1.funName] = _physicalKeyboardKey_numpad1;
  m[_physicalKeyboardKey_numpad2.funName] = _physicalKeyboardKey_numpad2;
  m[_physicalKeyboardKey_numpad3.funName] = _physicalKeyboardKey_numpad3;
  m[_physicalKeyboardKey_numpad4.funName] = _physicalKeyboardKey_numpad4;
  m[_physicalKeyboardKey_numpad5.funName] = _physicalKeyboardKey_numpad5;
  m[_physicalKeyboardKey_numpad6.funName] = _physicalKeyboardKey_numpad6;
  m[_physicalKeyboardKey_numpad7.funName] = _physicalKeyboardKey_numpad7;
  m[_physicalKeyboardKey_numpad8.funName] = _physicalKeyboardKey_numpad8;
  m[_physicalKeyboardKey_numpad9.funName] = _physicalKeyboardKey_numpad9;
  m[_physicalKeyboardKey_numpad0.funName] = _physicalKeyboardKey_numpad0;
  m[_physicalKeyboardKey_numpadDecimal.funName] = _physicalKeyboardKey_numpadDecimal;
  m[_physicalKeyboardKey_intlBackslash.funName] = _physicalKeyboardKey_intlBackslash;
  m[_physicalKeyboardKey_contextMenu.funName] = _physicalKeyboardKey_contextMenu;
  m[_physicalKeyboardKey_power.funName] = _physicalKeyboardKey_power;
  m[_physicalKeyboardKey_numpadEqual.funName] = _physicalKeyboardKey_numpadEqual;
  m[_physicalKeyboardKey_f13.funName] = _physicalKeyboardKey_f13;
  m[_physicalKeyboardKey_f14.funName] = _physicalKeyboardKey_f14;
  m[_physicalKeyboardKey_f15.funName] = _physicalKeyboardKey_f15;
  m[_physicalKeyboardKey_f16.funName] = _physicalKeyboardKey_f16;
  m[_physicalKeyboardKey_f17.funName] = _physicalKeyboardKey_f17;
  m[_physicalKeyboardKey_f18.funName] = _physicalKeyboardKey_f18;
  m[_physicalKeyboardKey_f19.funName] = _physicalKeyboardKey_f19;
  m[_physicalKeyboardKey_f20.funName] = _physicalKeyboardKey_f20;
  m[_physicalKeyboardKey_f21.funName] = _physicalKeyboardKey_f21;
  m[_physicalKeyboardKey_f22.funName] = _physicalKeyboardKey_f22;
  m[_physicalKeyboardKey_f23.funName] = _physicalKeyboardKey_f23;
  m[_physicalKeyboardKey_f24.funName] = _physicalKeyboardKey_f24;
  m[_physicalKeyboardKey_open.funName] = _physicalKeyboardKey_open;
  m[_physicalKeyboardKey_help.funName] = _physicalKeyboardKey_help;
  m[_physicalKeyboardKey_select.funName] = _physicalKeyboardKey_select;
  m[_physicalKeyboardKey_again.funName] = _physicalKeyboardKey_again;
  m[_physicalKeyboardKey_undo.funName] = _physicalKeyboardKey_undo;
  m[_physicalKeyboardKey_cut.funName] = _physicalKeyboardKey_cut;
  m[_physicalKeyboardKey_copy.funName] = _physicalKeyboardKey_copy;
  m[_physicalKeyboardKey_paste.funName] = _physicalKeyboardKey_paste;
  m[_physicalKeyboardKey_find.funName] = _physicalKeyboardKey_find;
  m[_physicalKeyboardKey_audioVolumeMute.funName] = _physicalKeyboardKey_audioVolumeMute;
  m[_physicalKeyboardKey_audioVolumeUp.funName] = _physicalKeyboardKey_audioVolumeUp;
  m[_physicalKeyboardKey_audioVolumeDown.funName] = _physicalKeyboardKey_audioVolumeDown;
  m[_physicalKeyboardKey_numpadComma.funName] = _physicalKeyboardKey_numpadComma;
  m[_physicalKeyboardKey_intlRo.funName] = _physicalKeyboardKey_intlRo;
  m[_physicalKeyboardKey_kanaMode.funName] = _physicalKeyboardKey_kanaMode;
  m[_physicalKeyboardKey_intlYen.funName] = _physicalKeyboardKey_intlYen;
  m[_physicalKeyboardKey_convert.funName] = _physicalKeyboardKey_convert;
  m[_physicalKeyboardKey_nonConvert.funName] = _physicalKeyboardKey_nonConvert;
  m[_physicalKeyboardKey_lang1.funName] = _physicalKeyboardKey_lang1;
  m[_physicalKeyboardKey_lang2.funName] = _physicalKeyboardKey_lang2;
  m[_physicalKeyboardKey_lang3.funName] = _physicalKeyboardKey_lang3;
  m[_physicalKeyboardKey_lang4.funName] = _physicalKeyboardKey_lang4;
  m[_physicalKeyboardKey_lang5.funName] = _physicalKeyboardKey_lang5;
  m[_physicalKeyboardKey_abort.funName] = _physicalKeyboardKey_abort;
  m[_physicalKeyboardKey_props.funName] = _physicalKeyboardKey_props;
  m[_physicalKeyboardKey_numpadParenLeft.funName] = _physicalKeyboardKey_numpadParenLeft;
  m[_physicalKeyboardKey_numpadParenRight.funName] = _physicalKeyboardKey_numpadParenRight;
  m[_physicalKeyboardKey_numpadBackspace.funName] = _physicalKeyboardKey_numpadBackspace;
  m[_physicalKeyboardKey_numpadMemoryStore.funName] = _physicalKeyboardKey_numpadMemoryStore;
  m[_physicalKeyboardKey_numpadMemoryRecall.funName] = _physicalKeyboardKey_numpadMemoryRecall;
  m[_physicalKeyboardKey_numpadMemoryClear.funName] = _physicalKeyboardKey_numpadMemoryClear;
  m[_physicalKeyboardKey_numpadMemoryAdd.funName] = _physicalKeyboardKey_numpadMemoryAdd;
  m[_physicalKeyboardKey_numpadMemorySubtract.funName] = _physicalKeyboardKey_numpadMemorySubtract;
  m[_physicalKeyboardKey_numpadSignChange.funName] = _physicalKeyboardKey_numpadSignChange;
  m[_physicalKeyboardKey_numpadClear.funName] = _physicalKeyboardKey_numpadClear;
  m[_physicalKeyboardKey_numpadClearEntry.funName] = _physicalKeyboardKey_numpadClearEntry;
  m[_physicalKeyboardKey_controlLeft.funName] = _physicalKeyboardKey_controlLeft;
  m[_physicalKeyboardKey_shiftLeft.funName] = _physicalKeyboardKey_shiftLeft;
  m[_physicalKeyboardKey_altLeft.funName] = _physicalKeyboardKey_altLeft;
  m[_physicalKeyboardKey_metaLeft.funName] = _physicalKeyboardKey_metaLeft;
  m[_physicalKeyboardKey_controlRight.funName] = _physicalKeyboardKey_controlRight;
  m[_physicalKeyboardKey_shiftRight.funName] = _physicalKeyboardKey_shiftRight;
  m[_physicalKeyboardKey_altRight.funName] = _physicalKeyboardKey_altRight;
  m[_physicalKeyboardKey_metaRight.funName] = _physicalKeyboardKey_metaRight;
  m[_physicalKeyboardKey_info.funName] = _physicalKeyboardKey_info;
  m[_physicalKeyboardKey_closedCaptionToggle.funName] = _physicalKeyboardKey_closedCaptionToggle;
  m[_physicalKeyboardKey_brightnessUp.funName] = _physicalKeyboardKey_brightnessUp;
  m[_physicalKeyboardKey_brightnessDown.funName] = _physicalKeyboardKey_brightnessDown;
  m[_physicalKeyboardKey_brightnessToggle.funName] = _physicalKeyboardKey_brightnessToggle;
  m[_physicalKeyboardKey_brightnessMinimum.funName] = _physicalKeyboardKey_brightnessMinimum;
  m[_physicalKeyboardKey_brightnessMaximum.funName] = _physicalKeyboardKey_brightnessMaximum;
  m[_physicalKeyboardKey_brightnessAuto.funName] = _physicalKeyboardKey_brightnessAuto;
  m[_physicalKeyboardKey_kbdIllumUp.funName] = _physicalKeyboardKey_kbdIllumUp;
  m[_physicalKeyboardKey_kbdIllumDown.funName] = _physicalKeyboardKey_kbdIllumDown;
  m[_physicalKeyboardKey_mediaLast.funName] = _physicalKeyboardKey_mediaLast;
  m[_physicalKeyboardKey_launchPhone.funName] = _physicalKeyboardKey_launchPhone;
  m[_physicalKeyboardKey_programGuide.funName] = _physicalKeyboardKey_programGuide;
  m[_physicalKeyboardKey_exit.funName] = _physicalKeyboardKey_exit;
  m[_physicalKeyboardKey_channelUp.funName] = _physicalKeyboardKey_channelUp;
  m[_physicalKeyboardKey_channelDown.funName] = _physicalKeyboardKey_channelDown;
  m[_physicalKeyboardKey_mediaPlay.funName] = _physicalKeyboardKey_mediaPlay;
  m[_physicalKeyboardKey_mediaPause.funName] = _physicalKeyboardKey_mediaPause;
  m[_physicalKeyboardKey_mediaRecord.funName] = _physicalKeyboardKey_mediaRecord;
  m[_physicalKeyboardKey_mediaFastForward.funName] = _physicalKeyboardKey_mediaFastForward;
  m[_physicalKeyboardKey_mediaRewind.funName] = _physicalKeyboardKey_mediaRewind;
  m[_physicalKeyboardKey_mediaTrackNext.funName] = _physicalKeyboardKey_mediaTrackNext;
  m[_physicalKeyboardKey_mediaTrackPrevious.funName] = _physicalKeyboardKey_mediaTrackPrevious;
  m[_physicalKeyboardKey_mediaStop.funName] = _physicalKeyboardKey_mediaStop;
  m[_physicalKeyboardKey_eject.funName] = _physicalKeyboardKey_eject;
  m[_physicalKeyboardKey_mediaPlayPause.funName] = _physicalKeyboardKey_mediaPlayPause;
  m[_physicalKeyboardKey_speechInputToggle.funName] = _physicalKeyboardKey_speechInputToggle;
  m[_physicalKeyboardKey_bassBoost.funName] = _physicalKeyboardKey_bassBoost;
  m[_physicalKeyboardKey_mediaSelect.funName] = _physicalKeyboardKey_mediaSelect;
  m[_physicalKeyboardKey_launchWordProcessor.funName] = _physicalKeyboardKey_launchWordProcessor;
  m[_physicalKeyboardKey_launchSpreadsheet.funName] = _physicalKeyboardKey_launchSpreadsheet;
  m[_physicalKeyboardKey_launchMail.funName] = _physicalKeyboardKey_launchMail;
  m[_physicalKeyboardKey_launchContacts.funName] = _physicalKeyboardKey_launchContacts;
  m[_physicalKeyboardKey_launchCalendar.funName] = _physicalKeyboardKey_launchCalendar;
  m[_physicalKeyboardKey_launchApp2.funName] = _physicalKeyboardKey_launchApp2;
  m[_physicalKeyboardKey_launchApp1.funName] = _physicalKeyboardKey_launchApp1;
  m[_physicalKeyboardKey_launchInternetBrowser.funName] = _physicalKeyboardKey_launchInternetBrowser;
  m[_physicalKeyboardKey_logOff.funName] = _physicalKeyboardKey_logOff;
  m[_physicalKeyboardKey_lockScreen.funName] = _physicalKeyboardKey_lockScreen;
  m[_physicalKeyboardKey_launchControlPanel.funName] = _physicalKeyboardKey_launchControlPanel;
  m[_physicalKeyboardKey_selectTask.funName] = _physicalKeyboardKey_selectTask;
  m[_physicalKeyboardKey_launchDocuments.funName] = _physicalKeyboardKey_launchDocuments;
  m[_physicalKeyboardKey_spellCheck.funName] = _physicalKeyboardKey_spellCheck;
  m[_physicalKeyboardKey_launchKeyboardLayout.funName] = _physicalKeyboardKey_launchKeyboardLayout;
  m[_physicalKeyboardKey_launchScreenSaver.funName] = _physicalKeyboardKey_launchScreenSaver;
  m[_physicalKeyboardKey_launchAssistant.funName] = _physicalKeyboardKey_launchAssistant;
  m[_physicalKeyboardKey_launchAudioBrowser.funName] = _physicalKeyboardKey_launchAudioBrowser;
  m[_physicalKeyboardKey_newKey.funName] = _physicalKeyboardKey_newKey;
  m[_physicalKeyboardKey_close.funName] = _physicalKeyboardKey_close;
  m[_physicalKeyboardKey_save.funName] = _physicalKeyboardKey_save;
  m[_physicalKeyboardKey_print.funName] = _physicalKeyboardKey_print;
  m[_physicalKeyboardKey_browserSearch.funName] = _physicalKeyboardKey_browserSearch;
  m[_physicalKeyboardKey_browserHome.funName] = _physicalKeyboardKey_browserHome;
  m[_physicalKeyboardKey_browserBack.funName] = _physicalKeyboardKey_browserBack;
  m[_physicalKeyboardKey_browserForward.funName] = _physicalKeyboardKey_browserForward;
  m[_physicalKeyboardKey_browserStop.funName] = _physicalKeyboardKey_browserStop;
  m[_physicalKeyboardKey_browserRefresh.funName] = _physicalKeyboardKey_browserRefresh;
  m[_physicalKeyboardKey_browserFavorites.funName] = _physicalKeyboardKey_browserFavorites;
  m[_physicalKeyboardKey_zoomIn.funName] = _physicalKeyboardKey_zoomIn;
  m[_physicalKeyboardKey_zoomOut.funName] = _physicalKeyboardKey_zoomOut;
  m[_physicalKeyboardKey_zoomToggle.funName] = _physicalKeyboardKey_zoomToggle;
  m[_physicalKeyboardKey_redo.funName] = _physicalKeyboardKey_redo;
  m[_physicalKeyboardKey_mailReply.funName] = _physicalKeyboardKey_mailReply;
  m[_physicalKeyboardKey_mailForward.funName] = _physicalKeyboardKey_mailForward;
  m[_physicalKeyboardKey_mailSend.funName] = _physicalKeyboardKey_mailSend;
  m[_physicalKeyboardKey_keyboardLayoutSelect.funName] = _physicalKeyboardKey_keyboardLayoutSelect;
  m[_physicalKeyboardKey_showAllWindows.funName] = _physicalKeyboardKey_showAllWindows;
  m[_physicalKeyboardKey_gameButton1.funName] = _physicalKeyboardKey_gameButton1;
  m[_physicalKeyboardKey_gameButton2.funName] = _physicalKeyboardKey_gameButton2;
  m[_physicalKeyboardKey_gameButton3.funName] = _physicalKeyboardKey_gameButton3;
  m[_physicalKeyboardKey_gameButton4.funName] = _physicalKeyboardKey_gameButton4;
  m[_physicalKeyboardKey_gameButton5.funName] = _physicalKeyboardKey_gameButton5;
  m[_physicalKeyboardKey_gameButton6.funName] = _physicalKeyboardKey_gameButton6;
  m[_physicalKeyboardKey_gameButton7.funName] = _physicalKeyboardKey_gameButton7;
  m[_physicalKeyboardKey_gameButton8.funName] = _physicalKeyboardKey_gameButton8;
  m[_physicalKeyboardKey_gameButton9.funName] = _physicalKeyboardKey_gameButton9;
  m[_physicalKeyboardKey_gameButton10.funName] = _physicalKeyboardKey_gameButton10;
  m[_physicalKeyboardKey_gameButton11.funName] = _physicalKeyboardKey_gameButton11;
  m[_physicalKeyboardKey_gameButton12.funName] = _physicalKeyboardKey_gameButton12;
  m[_physicalKeyboardKey_gameButton13.funName] = _physicalKeyboardKey_gameButton13;
  m[_physicalKeyboardKey_gameButton14.funName] = _physicalKeyboardKey_gameButton14;
  m[_physicalKeyboardKey_gameButton15.funName] = _physicalKeyboardKey_gameButton15;
  m[_physicalKeyboardKey_gameButton16.funName] = _physicalKeyboardKey_gameButton16;
  m[_physicalKeyboardKey_gameButtonA.funName] = _physicalKeyboardKey_gameButtonA;
  m[_physicalKeyboardKey_gameButtonB.funName] = _physicalKeyboardKey_gameButtonB;
  m[_physicalKeyboardKey_gameButtonC.funName] = _physicalKeyboardKey_gameButtonC;
  m[_physicalKeyboardKey_gameButtonLeft1.funName] = _physicalKeyboardKey_gameButtonLeft1;
  m[_physicalKeyboardKey_gameButtonLeft2.funName] = _physicalKeyboardKey_gameButtonLeft2;
  m[_physicalKeyboardKey_gameButtonMode.funName] = _physicalKeyboardKey_gameButtonMode;
  m[_physicalKeyboardKey_gameButtonRight1.funName] = _physicalKeyboardKey_gameButtonRight1;
  m[_physicalKeyboardKey_gameButtonRight2.funName] = _physicalKeyboardKey_gameButtonRight2;
  m[_physicalKeyboardKey_gameButtonSelect.funName] = _physicalKeyboardKey_gameButtonSelect;
  m[_physicalKeyboardKey_gameButtonStart.funName] = _physicalKeyboardKey_gameButtonStart;
  m[_physicalKeyboardKey_gameButtonThumbLeft.funName] = _physicalKeyboardKey_gameButtonThumbLeft;
  m[_physicalKeyboardKey_gameButtonThumbRight.funName] = _physicalKeyboardKey_gameButtonThumbRight;
  m[_physicalKeyboardKey_gameButtonX.funName] = _physicalKeyboardKey_gameButtonX;
  m[_physicalKeyboardKey_gameButtonY.funName] = _physicalKeyboardKey_gameButtonY;
  m[_physicalKeyboardKey_gameButtonZ.funName] = _physicalKeyboardKey_gameButtonZ;
  m[_physicalKeyboardKey_fn.funName] = _physicalKeyboardKey_fn;
  return m;
}
var _logicalKeyboardKey = MXFunctionInvoke(
  "LogicalKeyboardKey",
  ({
    int keyId,
    String debugName,
    String keyLabel = '',
  }) => LogicalKeyboardKey(
    keyId,
    debugName: debugName,
    keyLabel: keyLabel,
  ),
  [
    "keyId",
    "debugName",
    "keyLabel",
  ],
);
var _logicalKeyboardKey_valueMask = MXFunctionInvoke(
  "LogicalKeyboardKey.valueMask",
  () => LogicalKeyboardKey.valueMask
);
var _logicalKeyboardKey_platformMask = MXFunctionInvoke(
  "LogicalKeyboardKey.platformMask",
  () => LogicalKeyboardKey.platformMask
);
var _logicalKeyboardKey_autogeneratedMask = MXFunctionInvoke(
  "LogicalKeyboardKey.autogeneratedMask",
  () => LogicalKeyboardKey.autogeneratedMask
);
var _logicalKeyboardKey_synonymMask = MXFunctionInvoke(
  "LogicalKeyboardKey.synonymMask",
  () => LogicalKeyboardKey.synonymMask
);
var _logicalKeyboardKey_unicodePlane = MXFunctionInvoke(
  "LogicalKeyboardKey.unicodePlane",
  () => LogicalKeyboardKey.unicodePlane
);
var _logicalKeyboardKey_hidPlane = MXFunctionInvoke(
  "LogicalKeyboardKey.hidPlane",
  () => LogicalKeyboardKey.hidPlane
);
var _logicalKeyboardKey_none = MXFunctionInvoke(
  "LogicalKeyboardKey.none",
  () => LogicalKeyboardKey.none
);
var _logicalKeyboardKey_hyper = MXFunctionInvoke(
  "LogicalKeyboardKey.hyper",
  () => LogicalKeyboardKey.hyper
);
var _logicalKeyboardKey_superKey = MXFunctionInvoke(
  "LogicalKeyboardKey.superKey",
  () => LogicalKeyboardKey.superKey
);
var _logicalKeyboardKey_fnLock = MXFunctionInvoke(
  "LogicalKeyboardKey.fnLock",
  () => LogicalKeyboardKey.fnLock
);
var _logicalKeyboardKey_suspend = MXFunctionInvoke(
  "LogicalKeyboardKey.suspend",
  () => LogicalKeyboardKey.suspend
);
var _logicalKeyboardKey_resume = MXFunctionInvoke(
  "LogicalKeyboardKey.resume",
  () => LogicalKeyboardKey.resume
);
var _logicalKeyboardKey_turbo = MXFunctionInvoke(
  "LogicalKeyboardKey.turbo",
  () => LogicalKeyboardKey.turbo
);
var _logicalKeyboardKey_privacyScreenToggle = MXFunctionInvoke(
  "LogicalKeyboardKey.privacyScreenToggle",
  () => LogicalKeyboardKey.privacyScreenToggle
);
var _logicalKeyboardKey_sleep = MXFunctionInvoke(
  "LogicalKeyboardKey.sleep",
  () => LogicalKeyboardKey.sleep
);
var _logicalKeyboardKey_wakeUp = MXFunctionInvoke(
  "LogicalKeyboardKey.wakeUp",
  () => LogicalKeyboardKey.wakeUp
);
var _logicalKeyboardKey_displayToggleIntExt = MXFunctionInvoke(
  "LogicalKeyboardKey.displayToggleIntExt",
  () => LogicalKeyboardKey.displayToggleIntExt
);
var _logicalKeyboardKey_usbReserved = MXFunctionInvoke(
  "LogicalKeyboardKey.usbReserved",
  () => LogicalKeyboardKey.usbReserved
);
var _logicalKeyboardKey_usbErrorRollOver = MXFunctionInvoke(
  "LogicalKeyboardKey.usbErrorRollOver",
  () => LogicalKeyboardKey.usbErrorRollOver
);
var _logicalKeyboardKey_usbPostFail = MXFunctionInvoke(
  "LogicalKeyboardKey.usbPostFail",
  () => LogicalKeyboardKey.usbPostFail
);
var _logicalKeyboardKey_usbErrorUndefined = MXFunctionInvoke(
  "LogicalKeyboardKey.usbErrorUndefined",
  () => LogicalKeyboardKey.usbErrorUndefined
);
var _logicalKeyboardKey_keyA = MXFunctionInvoke(
  "LogicalKeyboardKey.keyA",
  () => LogicalKeyboardKey.keyA
);
var _logicalKeyboardKey_keyB = MXFunctionInvoke(
  "LogicalKeyboardKey.keyB",
  () => LogicalKeyboardKey.keyB
);
var _logicalKeyboardKey_keyC = MXFunctionInvoke(
  "LogicalKeyboardKey.keyC",
  () => LogicalKeyboardKey.keyC
);
var _logicalKeyboardKey_keyD = MXFunctionInvoke(
  "LogicalKeyboardKey.keyD",
  () => LogicalKeyboardKey.keyD
);
var _logicalKeyboardKey_keyE = MXFunctionInvoke(
  "LogicalKeyboardKey.keyE",
  () => LogicalKeyboardKey.keyE
);
var _logicalKeyboardKey_keyF = MXFunctionInvoke(
  "LogicalKeyboardKey.keyF",
  () => LogicalKeyboardKey.keyF
);
var _logicalKeyboardKey_keyG = MXFunctionInvoke(
  "LogicalKeyboardKey.keyG",
  () => LogicalKeyboardKey.keyG
);
var _logicalKeyboardKey_keyH = MXFunctionInvoke(
  "LogicalKeyboardKey.keyH",
  () => LogicalKeyboardKey.keyH
);
var _logicalKeyboardKey_keyI = MXFunctionInvoke(
  "LogicalKeyboardKey.keyI",
  () => LogicalKeyboardKey.keyI
);
var _logicalKeyboardKey_keyJ = MXFunctionInvoke(
  "LogicalKeyboardKey.keyJ",
  () => LogicalKeyboardKey.keyJ
);
var _logicalKeyboardKey_keyK = MXFunctionInvoke(
  "LogicalKeyboardKey.keyK",
  () => LogicalKeyboardKey.keyK
);
var _logicalKeyboardKey_keyL = MXFunctionInvoke(
  "LogicalKeyboardKey.keyL",
  () => LogicalKeyboardKey.keyL
);
var _logicalKeyboardKey_keyM = MXFunctionInvoke(
  "LogicalKeyboardKey.keyM",
  () => LogicalKeyboardKey.keyM
);
var _logicalKeyboardKey_keyN = MXFunctionInvoke(
  "LogicalKeyboardKey.keyN",
  () => LogicalKeyboardKey.keyN
);
var _logicalKeyboardKey_keyO = MXFunctionInvoke(
  "LogicalKeyboardKey.keyO",
  () => LogicalKeyboardKey.keyO
);
var _logicalKeyboardKey_keyP = MXFunctionInvoke(
  "LogicalKeyboardKey.keyP",
  () => LogicalKeyboardKey.keyP
);
var _logicalKeyboardKey_keyQ = MXFunctionInvoke(
  "LogicalKeyboardKey.keyQ",
  () => LogicalKeyboardKey.keyQ
);
var _logicalKeyboardKey_keyR = MXFunctionInvoke(
  "LogicalKeyboardKey.keyR",
  () => LogicalKeyboardKey.keyR
);
var _logicalKeyboardKey_keyS = MXFunctionInvoke(
  "LogicalKeyboardKey.keyS",
  () => LogicalKeyboardKey.keyS
);
var _logicalKeyboardKey_keyT = MXFunctionInvoke(
  "LogicalKeyboardKey.keyT",
  () => LogicalKeyboardKey.keyT
);
var _logicalKeyboardKey_keyU = MXFunctionInvoke(
  "LogicalKeyboardKey.keyU",
  () => LogicalKeyboardKey.keyU
);
var _logicalKeyboardKey_keyV = MXFunctionInvoke(
  "LogicalKeyboardKey.keyV",
  () => LogicalKeyboardKey.keyV
);
var _logicalKeyboardKey_keyW = MXFunctionInvoke(
  "LogicalKeyboardKey.keyW",
  () => LogicalKeyboardKey.keyW
);
var _logicalKeyboardKey_keyX = MXFunctionInvoke(
  "LogicalKeyboardKey.keyX",
  () => LogicalKeyboardKey.keyX
);
var _logicalKeyboardKey_keyY = MXFunctionInvoke(
  "LogicalKeyboardKey.keyY",
  () => LogicalKeyboardKey.keyY
);
var _logicalKeyboardKey_keyZ = MXFunctionInvoke(
  "LogicalKeyboardKey.keyZ",
  () => LogicalKeyboardKey.keyZ
);
var _logicalKeyboardKey_digit1 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit1",
  () => LogicalKeyboardKey.digit1
);
var _logicalKeyboardKey_digit2 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit2",
  () => LogicalKeyboardKey.digit2
);
var _logicalKeyboardKey_digit3 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit3",
  () => LogicalKeyboardKey.digit3
);
var _logicalKeyboardKey_digit4 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit4",
  () => LogicalKeyboardKey.digit4
);
var _logicalKeyboardKey_digit5 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit5",
  () => LogicalKeyboardKey.digit5
);
var _logicalKeyboardKey_digit6 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit6",
  () => LogicalKeyboardKey.digit6
);
var _logicalKeyboardKey_digit7 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit7",
  () => LogicalKeyboardKey.digit7
);
var _logicalKeyboardKey_digit8 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit8",
  () => LogicalKeyboardKey.digit8
);
var _logicalKeyboardKey_digit9 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit9",
  () => LogicalKeyboardKey.digit9
);
var _logicalKeyboardKey_digit0 = MXFunctionInvoke(
  "LogicalKeyboardKey.digit0",
  () => LogicalKeyboardKey.digit0
);
var _logicalKeyboardKey_enter = MXFunctionInvoke(
  "LogicalKeyboardKey.enter",
  () => LogicalKeyboardKey.enter
);
var _logicalKeyboardKey_escape = MXFunctionInvoke(
  "LogicalKeyboardKey.escape",
  () => LogicalKeyboardKey.escape
);
var _logicalKeyboardKey_backspace = MXFunctionInvoke(
  "LogicalKeyboardKey.backspace",
  () => LogicalKeyboardKey.backspace
);
var _logicalKeyboardKey_tab = MXFunctionInvoke(
  "LogicalKeyboardKey.tab",
  () => LogicalKeyboardKey.tab
);
var _logicalKeyboardKey_space = MXFunctionInvoke(
  "LogicalKeyboardKey.space",
  () => LogicalKeyboardKey.space
);
var _logicalKeyboardKey_minus = MXFunctionInvoke(
  "LogicalKeyboardKey.minus",
  () => LogicalKeyboardKey.minus
);
var _logicalKeyboardKey_equal = MXFunctionInvoke(
  "LogicalKeyboardKey.equal",
  () => LogicalKeyboardKey.equal
);
var _logicalKeyboardKey_bracketLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.bracketLeft",
  () => LogicalKeyboardKey.bracketLeft
);
var _logicalKeyboardKey_bracketRight = MXFunctionInvoke(
  "LogicalKeyboardKey.bracketRight",
  () => LogicalKeyboardKey.bracketRight
);
var _logicalKeyboardKey_backslash = MXFunctionInvoke(
  "LogicalKeyboardKey.backslash",
  () => LogicalKeyboardKey.backslash
);
var _logicalKeyboardKey_semicolon = MXFunctionInvoke(
  "LogicalKeyboardKey.semicolon",
  () => LogicalKeyboardKey.semicolon
);
var _logicalKeyboardKey_quote = MXFunctionInvoke(
  "LogicalKeyboardKey.quote",
  () => LogicalKeyboardKey.quote
);
var _logicalKeyboardKey_backquote = MXFunctionInvoke(
  "LogicalKeyboardKey.backquote",
  () => LogicalKeyboardKey.backquote
);
var _logicalKeyboardKey_comma = MXFunctionInvoke(
  "LogicalKeyboardKey.comma",
  () => LogicalKeyboardKey.comma
);
var _logicalKeyboardKey_period = MXFunctionInvoke(
  "LogicalKeyboardKey.period",
  () => LogicalKeyboardKey.period
);
var _logicalKeyboardKey_slash = MXFunctionInvoke(
  "LogicalKeyboardKey.slash",
  () => LogicalKeyboardKey.slash
);
var _logicalKeyboardKey_capsLock = MXFunctionInvoke(
  "LogicalKeyboardKey.capsLock",
  () => LogicalKeyboardKey.capsLock
);
var _logicalKeyboardKey_f1 = MXFunctionInvoke(
  "LogicalKeyboardKey.f1",
  () => LogicalKeyboardKey.f1
);
var _logicalKeyboardKey_f2 = MXFunctionInvoke(
  "LogicalKeyboardKey.f2",
  () => LogicalKeyboardKey.f2
);
var _logicalKeyboardKey_f3 = MXFunctionInvoke(
  "LogicalKeyboardKey.f3",
  () => LogicalKeyboardKey.f3
);
var _logicalKeyboardKey_f4 = MXFunctionInvoke(
  "LogicalKeyboardKey.f4",
  () => LogicalKeyboardKey.f4
);
var _logicalKeyboardKey_f5 = MXFunctionInvoke(
  "LogicalKeyboardKey.f5",
  () => LogicalKeyboardKey.f5
);
var _logicalKeyboardKey_f6 = MXFunctionInvoke(
  "LogicalKeyboardKey.f6",
  () => LogicalKeyboardKey.f6
);
var _logicalKeyboardKey_f7 = MXFunctionInvoke(
  "LogicalKeyboardKey.f7",
  () => LogicalKeyboardKey.f7
);
var _logicalKeyboardKey_f8 = MXFunctionInvoke(
  "LogicalKeyboardKey.f8",
  () => LogicalKeyboardKey.f8
);
var _logicalKeyboardKey_f9 = MXFunctionInvoke(
  "LogicalKeyboardKey.f9",
  () => LogicalKeyboardKey.f9
);
var _logicalKeyboardKey_f10 = MXFunctionInvoke(
  "LogicalKeyboardKey.f10",
  () => LogicalKeyboardKey.f10
);
var _logicalKeyboardKey_f11 = MXFunctionInvoke(
  "LogicalKeyboardKey.f11",
  () => LogicalKeyboardKey.f11
);
var _logicalKeyboardKey_f12 = MXFunctionInvoke(
  "LogicalKeyboardKey.f12",
  () => LogicalKeyboardKey.f12
);
var _logicalKeyboardKey_printScreen = MXFunctionInvoke(
  "LogicalKeyboardKey.printScreen",
  () => LogicalKeyboardKey.printScreen
);
var _logicalKeyboardKey_scrollLock = MXFunctionInvoke(
  "LogicalKeyboardKey.scrollLock",
  () => LogicalKeyboardKey.scrollLock
);
var _logicalKeyboardKey_pause = MXFunctionInvoke(
  "LogicalKeyboardKey.pause",
  () => LogicalKeyboardKey.pause
);
var _logicalKeyboardKey_insert = MXFunctionInvoke(
  "LogicalKeyboardKey.insert",
  () => LogicalKeyboardKey.insert
);
var _logicalKeyboardKey_home = MXFunctionInvoke(
  "LogicalKeyboardKey.home",
  () => LogicalKeyboardKey.home
);
var _logicalKeyboardKey_pageUp = MXFunctionInvoke(
  "LogicalKeyboardKey.pageUp",
  () => LogicalKeyboardKey.pageUp
);
var _logicalKeyboardKey_delete = MXFunctionInvoke(
  "LogicalKeyboardKey.delete",
  () => LogicalKeyboardKey.delete
);
var _logicalKeyboardKey_end = MXFunctionInvoke(
  "LogicalKeyboardKey.end",
  () => LogicalKeyboardKey.end
);
var _logicalKeyboardKey_pageDown = MXFunctionInvoke(
  "LogicalKeyboardKey.pageDown",
  () => LogicalKeyboardKey.pageDown
);
var _logicalKeyboardKey_arrowRight = MXFunctionInvoke(
  "LogicalKeyboardKey.arrowRight",
  () => LogicalKeyboardKey.arrowRight
);
var _logicalKeyboardKey_arrowLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.arrowLeft",
  () => LogicalKeyboardKey.arrowLeft
);
var _logicalKeyboardKey_arrowDown = MXFunctionInvoke(
  "LogicalKeyboardKey.arrowDown",
  () => LogicalKeyboardKey.arrowDown
);
var _logicalKeyboardKey_arrowUp = MXFunctionInvoke(
  "LogicalKeyboardKey.arrowUp",
  () => LogicalKeyboardKey.arrowUp
);
var _logicalKeyboardKey_numLock = MXFunctionInvoke(
  "LogicalKeyboardKey.numLock",
  () => LogicalKeyboardKey.numLock
);
var _logicalKeyboardKey_numpadDivide = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadDivide",
  () => LogicalKeyboardKey.numpadDivide
);
var _logicalKeyboardKey_numpadMultiply = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadMultiply",
  () => LogicalKeyboardKey.numpadMultiply
);
var _logicalKeyboardKey_numpadSubtract = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadSubtract",
  () => LogicalKeyboardKey.numpadSubtract
);
var _logicalKeyboardKey_numpadAdd = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadAdd",
  () => LogicalKeyboardKey.numpadAdd
);
var _logicalKeyboardKey_numpadEnter = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadEnter",
  () => LogicalKeyboardKey.numpadEnter
);
var _logicalKeyboardKey_numpad1 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad1",
  () => LogicalKeyboardKey.numpad1
);
var _logicalKeyboardKey_numpad2 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad2",
  () => LogicalKeyboardKey.numpad2
);
var _logicalKeyboardKey_numpad3 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad3",
  () => LogicalKeyboardKey.numpad3
);
var _logicalKeyboardKey_numpad4 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad4",
  () => LogicalKeyboardKey.numpad4
);
var _logicalKeyboardKey_numpad5 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad5",
  () => LogicalKeyboardKey.numpad5
);
var _logicalKeyboardKey_numpad6 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad6",
  () => LogicalKeyboardKey.numpad6
);
var _logicalKeyboardKey_numpad7 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad7",
  () => LogicalKeyboardKey.numpad7
);
var _logicalKeyboardKey_numpad8 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad8",
  () => LogicalKeyboardKey.numpad8
);
var _logicalKeyboardKey_numpad9 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad9",
  () => LogicalKeyboardKey.numpad9
);
var _logicalKeyboardKey_numpad0 = MXFunctionInvoke(
  "LogicalKeyboardKey.numpad0",
  () => LogicalKeyboardKey.numpad0
);
var _logicalKeyboardKey_numpadDecimal = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadDecimal",
  () => LogicalKeyboardKey.numpadDecimal
);
var _logicalKeyboardKey_intlBackslash = MXFunctionInvoke(
  "LogicalKeyboardKey.intlBackslash",
  () => LogicalKeyboardKey.intlBackslash
);
var _logicalKeyboardKey_contextMenu = MXFunctionInvoke(
  "LogicalKeyboardKey.contextMenu",
  () => LogicalKeyboardKey.contextMenu
);
var _logicalKeyboardKey_power = MXFunctionInvoke(
  "LogicalKeyboardKey.power",
  () => LogicalKeyboardKey.power
);
var _logicalKeyboardKey_numpadEqual = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadEqual",
  () => LogicalKeyboardKey.numpadEqual
);
var _logicalKeyboardKey_f13 = MXFunctionInvoke(
  "LogicalKeyboardKey.f13",
  () => LogicalKeyboardKey.f13
);
var _logicalKeyboardKey_f14 = MXFunctionInvoke(
  "LogicalKeyboardKey.f14",
  () => LogicalKeyboardKey.f14
);
var _logicalKeyboardKey_f15 = MXFunctionInvoke(
  "LogicalKeyboardKey.f15",
  () => LogicalKeyboardKey.f15
);
var _logicalKeyboardKey_f16 = MXFunctionInvoke(
  "LogicalKeyboardKey.f16",
  () => LogicalKeyboardKey.f16
);
var _logicalKeyboardKey_f17 = MXFunctionInvoke(
  "LogicalKeyboardKey.f17",
  () => LogicalKeyboardKey.f17
);
var _logicalKeyboardKey_f18 = MXFunctionInvoke(
  "LogicalKeyboardKey.f18",
  () => LogicalKeyboardKey.f18
);
var _logicalKeyboardKey_f19 = MXFunctionInvoke(
  "LogicalKeyboardKey.f19",
  () => LogicalKeyboardKey.f19
);
var _logicalKeyboardKey_f20 = MXFunctionInvoke(
  "LogicalKeyboardKey.f20",
  () => LogicalKeyboardKey.f20
);
var _logicalKeyboardKey_f21 = MXFunctionInvoke(
  "LogicalKeyboardKey.f21",
  () => LogicalKeyboardKey.f21
);
var _logicalKeyboardKey_f22 = MXFunctionInvoke(
  "LogicalKeyboardKey.f22",
  () => LogicalKeyboardKey.f22
);
var _logicalKeyboardKey_f23 = MXFunctionInvoke(
  "LogicalKeyboardKey.f23",
  () => LogicalKeyboardKey.f23
);
var _logicalKeyboardKey_f24 = MXFunctionInvoke(
  "LogicalKeyboardKey.f24",
  () => LogicalKeyboardKey.f24
);
var _logicalKeyboardKey_open = MXFunctionInvoke(
  "LogicalKeyboardKey.open",
  () => LogicalKeyboardKey.open
);
var _logicalKeyboardKey_help = MXFunctionInvoke(
  "LogicalKeyboardKey.help",
  () => LogicalKeyboardKey.help
);
var _logicalKeyboardKey_select = MXFunctionInvoke(
  "LogicalKeyboardKey.select",
  () => LogicalKeyboardKey.select
);
var _logicalKeyboardKey_again = MXFunctionInvoke(
  "LogicalKeyboardKey.again",
  () => LogicalKeyboardKey.again
);
var _logicalKeyboardKey_undo = MXFunctionInvoke(
  "LogicalKeyboardKey.undo",
  () => LogicalKeyboardKey.undo
);
var _logicalKeyboardKey_cut = MXFunctionInvoke(
  "LogicalKeyboardKey.cut",
  () => LogicalKeyboardKey.cut
);
var _logicalKeyboardKey_copy = MXFunctionInvoke(
  "LogicalKeyboardKey.copy",
  () => LogicalKeyboardKey.copy
);
var _logicalKeyboardKey_paste = MXFunctionInvoke(
  "LogicalKeyboardKey.paste",
  () => LogicalKeyboardKey.paste
);
var _logicalKeyboardKey_find = MXFunctionInvoke(
  "LogicalKeyboardKey.find",
  () => LogicalKeyboardKey.find
);
var _logicalKeyboardKey_audioVolumeMute = MXFunctionInvoke(
  "LogicalKeyboardKey.audioVolumeMute",
  () => LogicalKeyboardKey.audioVolumeMute
);
var _logicalKeyboardKey_audioVolumeUp = MXFunctionInvoke(
  "LogicalKeyboardKey.audioVolumeUp",
  () => LogicalKeyboardKey.audioVolumeUp
);
var _logicalKeyboardKey_audioVolumeDown = MXFunctionInvoke(
  "LogicalKeyboardKey.audioVolumeDown",
  () => LogicalKeyboardKey.audioVolumeDown
);
var _logicalKeyboardKey_numpadComma = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadComma",
  () => LogicalKeyboardKey.numpadComma
);
var _logicalKeyboardKey_intlRo = MXFunctionInvoke(
  "LogicalKeyboardKey.intlRo",
  () => LogicalKeyboardKey.intlRo
);
var _logicalKeyboardKey_kanaMode = MXFunctionInvoke(
  "LogicalKeyboardKey.kanaMode",
  () => LogicalKeyboardKey.kanaMode
);
var _logicalKeyboardKey_intlYen = MXFunctionInvoke(
  "LogicalKeyboardKey.intlYen",
  () => LogicalKeyboardKey.intlYen
);
var _logicalKeyboardKey_convert = MXFunctionInvoke(
  "LogicalKeyboardKey.convert",
  () => LogicalKeyboardKey.convert
);
var _logicalKeyboardKey_nonConvert = MXFunctionInvoke(
  "LogicalKeyboardKey.nonConvert",
  () => LogicalKeyboardKey.nonConvert
);
var _logicalKeyboardKey_lang1 = MXFunctionInvoke(
  "LogicalKeyboardKey.lang1",
  () => LogicalKeyboardKey.lang1
);
var _logicalKeyboardKey_lang2 = MXFunctionInvoke(
  "LogicalKeyboardKey.lang2",
  () => LogicalKeyboardKey.lang2
);
var _logicalKeyboardKey_lang3 = MXFunctionInvoke(
  "LogicalKeyboardKey.lang3",
  () => LogicalKeyboardKey.lang3
);
var _logicalKeyboardKey_lang4 = MXFunctionInvoke(
  "LogicalKeyboardKey.lang4",
  () => LogicalKeyboardKey.lang4
);
var _logicalKeyboardKey_lang5 = MXFunctionInvoke(
  "LogicalKeyboardKey.lang5",
  () => LogicalKeyboardKey.lang5
);
var _logicalKeyboardKey_abort = MXFunctionInvoke(
  "LogicalKeyboardKey.abort",
  () => LogicalKeyboardKey.abort
);
var _logicalKeyboardKey_props = MXFunctionInvoke(
  "LogicalKeyboardKey.props",
  () => LogicalKeyboardKey.props
);
var _logicalKeyboardKey_numpadParenLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadParenLeft",
  () => LogicalKeyboardKey.numpadParenLeft
);
var _logicalKeyboardKey_numpadParenRight = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadParenRight",
  () => LogicalKeyboardKey.numpadParenRight
);
var _logicalKeyboardKey_numpadBackspace = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadBackspace",
  () => LogicalKeyboardKey.numpadBackspace
);
var _logicalKeyboardKey_numpadMemoryStore = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadMemoryStore",
  () => LogicalKeyboardKey.numpadMemoryStore
);
var _logicalKeyboardKey_numpadMemoryRecall = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadMemoryRecall",
  () => LogicalKeyboardKey.numpadMemoryRecall
);
var _logicalKeyboardKey_numpadMemoryClear = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadMemoryClear",
  () => LogicalKeyboardKey.numpadMemoryClear
);
var _logicalKeyboardKey_numpadMemoryAdd = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadMemoryAdd",
  () => LogicalKeyboardKey.numpadMemoryAdd
);
var _logicalKeyboardKey_numpadMemorySubtract = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadMemorySubtract",
  () => LogicalKeyboardKey.numpadMemorySubtract
);
var _logicalKeyboardKey_numpadSignChange = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadSignChange",
  () => LogicalKeyboardKey.numpadSignChange
);
var _logicalKeyboardKey_numpadClear = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadClear",
  () => LogicalKeyboardKey.numpadClear
);
var _logicalKeyboardKey_numpadClearEntry = MXFunctionInvoke(
  "LogicalKeyboardKey.numpadClearEntry",
  () => LogicalKeyboardKey.numpadClearEntry
);
var _logicalKeyboardKey_controlLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.controlLeft",
  () => LogicalKeyboardKey.controlLeft
);
var _logicalKeyboardKey_shiftLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.shiftLeft",
  () => LogicalKeyboardKey.shiftLeft
);
var _logicalKeyboardKey_altLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.altLeft",
  () => LogicalKeyboardKey.altLeft
);
var _logicalKeyboardKey_metaLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.metaLeft",
  () => LogicalKeyboardKey.metaLeft
);
var _logicalKeyboardKey_controlRight = MXFunctionInvoke(
  "LogicalKeyboardKey.controlRight",
  () => LogicalKeyboardKey.controlRight
);
var _logicalKeyboardKey_shiftRight = MXFunctionInvoke(
  "LogicalKeyboardKey.shiftRight",
  () => LogicalKeyboardKey.shiftRight
);
var _logicalKeyboardKey_altRight = MXFunctionInvoke(
  "LogicalKeyboardKey.altRight",
  () => LogicalKeyboardKey.altRight
);
var _logicalKeyboardKey_metaRight = MXFunctionInvoke(
  "LogicalKeyboardKey.metaRight",
  () => LogicalKeyboardKey.metaRight
);
var _logicalKeyboardKey_info = MXFunctionInvoke(
  "LogicalKeyboardKey.info",
  () => LogicalKeyboardKey.info
);
var _logicalKeyboardKey_closedCaptionToggle = MXFunctionInvoke(
  "LogicalKeyboardKey.closedCaptionToggle",
  () => LogicalKeyboardKey.closedCaptionToggle
);
var _logicalKeyboardKey_brightnessUp = MXFunctionInvoke(
  "LogicalKeyboardKey.brightnessUp",
  () => LogicalKeyboardKey.brightnessUp
);
var _logicalKeyboardKey_brightnessDown = MXFunctionInvoke(
  "LogicalKeyboardKey.brightnessDown",
  () => LogicalKeyboardKey.brightnessDown
);
var _logicalKeyboardKey_brightnessToggle = MXFunctionInvoke(
  "LogicalKeyboardKey.brightnessToggle",
  () => LogicalKeyboardKey.brightnessToggle
);
var _logicalKeyboardKey_brightnessMinimum = MXFunctionInvoke(
  "LogicalKeyboardKey.brightnessMinimum",
  () => LogicalKeyboardKey.brightnessMinimum
);
var _logicalKeyboardKey_brightnessMaximum = MXFunctionInvoke(
  "LogicalKeyboardKey.brightnessMaximum",
  () => LogicalKeyboardKey.brightnessMaximum
);
var _logicalKeyboardKey_brightnessAuto = MXFunctionInvoke(
  "LogicalKeyboardKey.brightnessAuto",
  () => LogicalKeyboardKey.brightnessAuto
);
var _logicalKeyboardKey_kbdIllumUp = MXFunctionInvoke(
  "LogicalKeyboardKey.kbdIllumUp",
  () => LogicalKeyboardKey.kbdIllumUp
);
var _logicalKeyboardKey_kbdIllumDown = MXFunctionInvoke(
  "LogicalKeyboardKey.kbdIllumDown",
  () => LogicalKeyboardKey.kbdIllumDown
);
var _logicalKeyboardKey_mediaLast = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaLast",
  () => LogicalKeyboardKey.mediaLast
);
var _logicalKeyboardKey_launchPhone = MXFunctionInvoke(
  "LogicalKeyboardKey.launchPhone",
  () => LogicalKeyboardKey.launchPhone
);
var _logicalKeyboardKey_programGuide = MXFunctionInvoke(
  "LogicalKeyboardKey.programGuide",
  () => LogicalKeyboardKey.programGuide
);
var _logicalKeyboardKey_exit = MXFunctionInvoke(
  "LogicalKeyboardKey.exit",
  () => LogicalKeyboardKey.exit
);
var _logicalKeyboardKey_channelUp = MXFunctionInvoke(
  "LogicalKeyboardKey.channelUp",
  () => LogicalKeyboardKey.channelUp
);
var _logicalKeyboardKey_channelDown = MXFunctionInvoke(
  "LogicalKeyboardKey.channelDown",
  () => LogicalKeyboardKey.channelDown
);
var _logicalKeyboardKey_mediaPlay = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaPlay",
  () => LogicalKeyboardKey.mediaPlay
);
var _logicalKeyboardKey_mediaPause = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaPause",
  () => LogicalKeyboardKey.mediaPause
);
var _logicalKeyboardKey_mediaRecord = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaRecord",
  () => LogicalKeyboardKey.mediaRecord
);
var _logicalKeyboardKey_mediaFastForward = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaFastForward",
  () => LogicalKeyboardKey.mediaFastForward
);
var _logicalKeyboardKey_mediaRewind = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaRewind",
  () => LogicalKeyboardKey.mediaRewind
);
var _logicalKeyboardKey_mediaTrackNext = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaTrackNext",
  () => LogicalKeyboardKey.mediaTrackNext
);
var _logicalKeyboardKey_mediaTrackPrevious = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaTrackPrevious",
  () => LogicalKeyboardKey.mediaTrackPrevious
);
var _logicalKeyboardKey_mediaStop = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaStop",
  () => LogicalKeyboardKey.mediaStop
);
var _logicalKeyboardKey_eject = MXFunctionInvoke(
  "LogicalKeyboardKey.eject",
  () => LogicalKeyboardKey.eject
);
var _logicalKeyboardKey_mediaPlayPause = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaPlayPause",
  () => LogicalKeyboardKey.mediaPlayPause
);
var _logicalKeyboardKey_speechInputToggle = MXFunctionInvoke(
  "LogicalKeyboardKey.speechInputToggle",
  () => LogicalKeyboardKey.speechInputToggle
);
var _logicalKeyboardKey_bassBoost = MXFunctionInvoke(
  "LogicalKeyboardKey.bassBoost",
  () => LogicalKeyboardKey.bassBoost
);
var _logicalKeyboardKey_mediaSelect = MXFunctionInvoke(
  "LogicalKeyboardKey.mediaSelect",
  () => LogicalKeyboardKey.mediaSelect
);
var _logicalKeyboardKey_launchWordProcessor = MXFunctionInvoke(
  "LogicalKeyboardKey.launchWordProcessor",
  () => LogicalKeyboardKey.launchWordProcessor
);
var _logicalKeyboardKey_launchSpreadsheet = MXFunctionInvoke(
  "LogicalKeyboardKey.launchSpreadsheet",
  () => LogicalKeyboardKey.launchSpreadsheet
);
var _logicalKeyboardKey_launchMail = MXFunctionInvoke(
  "LogicalKeyboardKey.launchMail",
  () => LogicalKeyboardKey.launchMail
);
var _logicalKeyboardKey_launchContacts = MXFunctionInvoke(
  "LogicalKeyboardKey.launchContacts",
  () => LogicalKeyboardKey.launchContacts
);
var _logicalKeyboardKey_launchCalendar = MXFunctionInvoke(
  "LogicalKeyboardKey.launchCalendar",
  () => LogicalKeyboardKey.launchCalendar
);
var _logicalKeyboardKey_launchApp2 = MXFunctionInvoke(
  "LogicalKeyboardKey.launchApp2",
  () => LogicalKeyboardKey.launchApp2
);
var _logicalKeyboardKey_launchApp1 = MXFunctionInvoke(
  "LogicalKeyboardKey.launchApp1",
  () => LogicalKeyboardKey.launchApp1
);
var _logicalKeyboardKey_launchInternetBrowser = MXFunctionInvoke(
  "LogicalKeyboardKey.launchInternetBrowser",
  () => LogicalKeyboardKey.launchInternetBrowser
);
var _logicalKeyboardKey_logOff = MXFunctionInvoke(
  "LogicalKeyboardKey.logOff",
  () => LogicalKeyboardKey.logOff
);
var _logicalKeyboardKey_lockScreen = MXFunctionInvoke(
  "LogicalKeyboardKey.lockScreen",
  () => LogicalKeyboardKey.lockScreen
);
var _logicalKeyboardKey_launchControlPanel = MXFunctionInvoke(
  "LogicalKeyboardKey.launchControlPanel",
  () => LogicalKeyboardKey.launchControlPanel
);
var _logicalKeyboardKey_selectTask = MXFunctionInvoke(
  "LogicalKeyboardKey.selectTask",
  () => LogicalKeyboardKey.selectTask
);
var _logicalKeyboardKey_launchDocuments = MXFunctionInvoke(
  "LogicalKeyboardKey.launchDocuments",
  () => LogicalKeyboardKey.launchDocuments
);
var _logicalKeyboardKey_spellCheck = MXFunctionInvoke(
  "LogicalKeyboardKey.spellCheck",
  () => LogicalKeyboardKey.spellCheck
);
var _logicalKeyboardKey_launchKeyboardLayout = MXFunctionInvoke(
  "LogicalKeyboardKey.launchKeyboardLayout",
  () => LogicalKeyboardKey.launchKeyboardLayout
);
var _logicalKeyboardKey_launchScreenSaver = MXFunctionInvoke(
  "LogicalKeyboardKey.launchScreenSaver",
  () => LogicalKeyboardKey.launchScreenSaver
);
var _logicalKeyboardKey_launchAssistant = MXFunctionInvoke(
  "LogicalKeyboardKey.launchAssistant",
  () => LogicalKeyboardKey.launchAssistant
);
var _logicalKeyboardKey_launchAudioBrowser = MXFunctionInvoke(
  "LogicalKeyboardKey.launchAudioBrowser",
  () => LogicalKeyboardKey.launchAudioBrowser
);
var _logicalKeyboardKey_newKey = MXFunctionInvoke(
  "LogicalKeyboardKey.newKey",
  () => LogicalKeyboardKey.newKey
);
var _logicalKeyboardKey_close = MXFunctionInvoke(
  "LogicalKeyboardKey.close",
  () => LogicalKeyboardKey.close
);
var _logicalKeyboardKey_save = MXFunctionInvoke(
  "LogicalKeyboardKey.save",
  () => LogicalKeyboardKey.save
);
var _logicalKeyboardKey_print = MXFunctionInvoke(
  "LogicalKeyboardKey.print",
  () => LogicalKeyboardKey.print
);
var _logicalKeyboardKey_browserSearch = MXFunctionInvoke(
  "LogicalKeyboardKey.browserSearch",
  () => LogicalKeyboardKey.browserSearch
);
var _logicalKeyboardKey_browserHome = MXFunctionInvoke(
  "LogicalKeyboardKey.browserHome",
  () => LogicalKeyboardKey.browserHome
);
var _logicalKeyboardKey_browserBack = MXFunctionInvoke(
  "LogicalKeyboardKey.browserBack",
  () => LogicalKeyboardKey.browserBack
);
var _logicalKeyboardKey_browserForward = MXFunctionInvoke(
  "LogicalKeyboardKey.browserForward",
  () => LogicalKeyboardKey.browserForward
);
var _logicalKeyboardKey_browserStop = MXFunctionInvoke(
  "LogicalKeyboardKey.browserStop",
  () => LogicalKeyboardKey.browserStop
);
var _logicalKeyboardKey_browserRefresh = MXFunctionInvoke(
  "LogicalKeyboardKey.browserRefresh",
  () => LogicalKeyboardKey.browserRefresh
);
var _logicalKeyboardKey_browserFavorites = MXFunctionInvoke(
  "LogicalKeyboardKey.browserFavorites",
  () => LogicalKeyboardKey.browserFavorites
);
var _logicalKeyboardKey_zoomIn = MXFunctionInvoke(
  "LogicalKeyboardKey.zoomIn",
  () => LogicalKeyboardKey.zoomIn
);
var _logicalKeyboardKey_zoomOut = MXFunctionInvoke(
  "LogicalKeyboardKey.zoomOut",
  () => LogicalKeyboardKey.zoomOut
);
var _logicalKeyboardKey_zoomToggle = MXFunctionInvoke(
  "LogicalKeyboardKey.zoomToggle",
  () => LogicalKeyboardKey.zoomToggle
);
var _logicalKeyboardKey_redo = MXFunctionInvoke(
  "LogicalKeyboardKey.redo",
  () => LogicalKeyboardKey.redo
);
var _logicalKeyboardKey_mailReply = MXFunctionInvoke(
  "LogicalKeyboardKey.mailReply",
  () => LogicalKeyboardKey.mailReply
);
var _logicalKeyboardKey_mailForward = MXFunctionInvoke(
  "LogicalKeyboardKey.mailForward",
  () => LogicalKeyboardKey.mailForward
);
var _logicalKeyboardKey_mailSend = MXFunctionInvoke(
  "LogicalKeyboardKey.mailSend",
  () => LogicalKeyboardKey.mailSend
);
var _logicalKeyboardKey_keyboardLayoutSelect = MXFunctionInvoke(
  "LogicalKeyboardKey.keyboardLayoutSelect",
  () => LogicalKeyboardKey.keyboardLayoutSelect
);
var _logicalKeyboardKey_showAllWindows = MXFunctionInvoke(
  "LogicalKeyboardKey.showAllWindows",
  () => LogicalKeyboardKey.showAllWindows
);
var _logicalKeyboardKey_gameButton1 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton1",
  () => LogicalKeyboardKey.gameButton1
);
var _logicalKeyboardKey_gameButton2 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton2",
  () => LogicalKeyboardKey.gameButton2
);
var _logicalKeyboardKey_gameButton3 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton3",
  () => LogicalKeyboardKey.gameButton3
);
var _logicalKeyboardKey_gameButton4 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton4",
  () => LogicalKeyboardKey.gameButton4
);
var _logicalKeyboardKey_gameButton5 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton5",
  () => LogicalKeyboardKey.gameButton5
);
var _logicalKeyboardKey_gameButton6 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton6",
  () => LogicalKeyboardKey.gameButton6
);
var _logicalKeyboardKey_gameButton7 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton7",
  () => LogicalKeyboardKey.gameButton7
);
var _logicalKeyboardKey_gameButton8 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton8",
  () => LogicalKeyboardKey.gameButton8
);
var _logicalKeyboardKey_gameButton9 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton9",
  () => LogicalKeyboardKey.gameButton9
);
var _logicalKeyboardKey_gameButton10 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton10",
  () => LogicalKeyboardKey.gameButton10
);
var _logicalKeyboardKey_gameButton11 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton11",
  () => LogicalKeyboardKey.gameButton11
);
var _logicalKeyboardKey_gameButton12 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton12",
  () => LogicalKeyboardKey.gameButton12
);
var _logicalKeyboardKey_gameButton13 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton13",
  () => LogicalKeyboardKey.gameButton13
);
var _logicalKeyboardKey_gameButton14 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton14",
  () => LogicalKeyboardKey.gameButton14
);
var _logicalKeyboardKey_gameButton15 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton15",
  () => LogicalKeyboardKey.gameButton15
);
var _logicalKeyboardKey_gameButton16 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButton16",
  () => LogicalKeyboardKey.gameButton16
);
var _logicalKeyboardKey_gameButtonA = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonA",
  () => LogicalKeyboardKey.gameButtonA
);
var _logicalKeyboardKey_gameButtonB = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonB",
  () => LogicalKeyboardKey.gameButtonB
);
var _logicalKeyboardKey_gameButtonC = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonC",
  () => LogicalKeyboardKey.gameButtonC
);
var _logicalKeyboardKey_gameButtonLeft1 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonLeft1",
  () => LogicalKeyboardKey.gameButtonLeft1
);
var _logicalKeyboardKey_gameButtonLeft2 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonLeft2",
  () => LogicalKeyboardKey.gameButtonLeft2
);
var _logicalKeyboardKey_gameButtonMode = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonMode",
  () => LogicalKeyboardKey.gameButtonMode
);
var _logicalKeyboardKey_gameButtonRight1 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonRight1",
  () => LogicalKeyboardKey.gameButtonRight1
);
var _logicalKeyboardKey_gameButtonRight2 = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonRight2",
  () => LogicalKeyboardKey.gameButtonRight2
);
var _logicalKeyboardKey_gameButtonSelect = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonSelect",
  () => LogicalKeyboardKey.gameButtonSelect
);
var _logicalKeyboardKey_gameButtonStart = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonStart",
  () => LogicalKeyboardKey.gameButtonStart
);
var _logicalKeyboardKey_gameButtonThumbLeft = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonThumbLeft",
  () => LogicalKeyboardKey.gameButtonThumbLeft
);
var _logicalKeyboardKey_gameButtonThumbRight = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonThumbRight",
  () => LogicalKeyboardKey.gameButtonThumbRight
);
var _logicalKeyboardKey_gameButtonX = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonX",
  () => LogicalKeyboardKey.gameButtonX
);
var _logicalKeyboardKey_gameButtonY = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonY",
  () => LogicalKeyboardKey.gameButtonY
);
var _logicalKeyboardKey_gameButtonZ = MXFunctionInvoke(
  "LogicalKeyboardKey.gameButtonZ",
  () => LogicalKeyboardKey.gameButtonZ
);
var _logicalKeyboardKey_fn = MXFunctionInvoke(
  "LogicalKeyboardKey.fn",
  () => LogicalKeyboardKey.fn
);
var _logicalKeyboardKey_shift = MXFunctionInvoke(
  "LogicalKeyboardKey.shift",
  () => LogicalKeyboardKey.shift
);
var _logicalKeyboardKey_meta = MXFunctionInvoke(
  "LogicalKeyboardKey.meta",
  () => LogicalKeyboardKey.meta
);
var _logicalKeyboardKey_alt = MXFunctionInvoke(
  "LogicalKeyboardKey.alt",
  () => LogicalKeyboardKey.alt
);
var _logicalKeyboardKey_control = MXFunctionInvoke(
  "LogicalKeyboardKey.control",
  () => LogicalKeyboardKey.control
);
var _physicalKeyboardKey = MXFunctionInvoke(
  "PhysicalKeyboardKey",
  ({
    int usbHidUsage,
    String debugName,
  }) => PhysicalKeyboardKey(
    usbHidUsage,
    debugName: debugName,
  ),
  [
    "usbHidUsage",
    "debugName",
  ],
);
var _physicalKeyboardKey_none = MXFunctionInvoke(
  "PhysicalKeyboardKey.none",
  () => PhysicalKeyboardKey.none
);
var _physicalKeyboardKey_hyper = MXFunctionInvoke(
  "PhysicalKeyboardKey.hyper",
  () => PhysicalKeyboardKey.hyper
);
var _physicalKeyboardKey_superKey = MXFunctionInvoke(
  "PhysicalKeyboardKey.superKey",
  () => PhysicalKeyboardKey.superKey
);
var _physicalKeyboardKey_fnLock = MXFunctionInvoke(
  "PhysicalKeyboardKey.fnLock",
  () => PhysicalKeyboardKey.fnLock
);
var _physicalKeyboardKey_suspend = MXFunctionInvoke(
  "PhysicalKeyboardKey.suspend",
  () => PhysicalKeyboardKey.suspend
);
var _physicalKeyboardKey_resume = MXFunctionInvoke(
  "PhysicalKeyboardKey.resume",
  () => PhysicalKeyboardKey.resume
);
var _physicalKeyboardKey_turbo = MXFunctionInvoke(
  "PhysicalKeyboardKey.turbo",
  () => PhysicalKeyboardKey.turbo
);
var _physicalKeyboardKey_privacyScreenToggle = MXFunctionInvoke(
  "PhysicalKeyboardKey.privacyScreenToggle",
  () => PhysicalKeyboardKey.privacyScreenToggle
);
var _physicalKeyboardKey_sleep = MXFunctionInvoke(
  "PhysicalKeyboardKey.sleep",
  () => PhysicalKeyboardKey.sleep
);
var _physicalKeyboardKey_wakeUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.wakeUp",
  () => PhysicalKeyboardKey.wakeUp
);
var _physicalKeyboardKey_displayToggleIntExt = MXFunctionInvoke(
  "PhysicalKeyboardKey.displayToggleIntExt",
  () => PhysicalKeyboardKey.displayToggleIntExt
);
var _physicalKeyboardKey_usbReserved = MXFunctionInvoke(
  "PhysicalKeyboardKey.usbReserved",
  () => PhysicalKeyboardKey.usbReserved
);
var _physicalKeyboardKey_usbErrorRollOver = MXFunctionInvoke(
  "PhysicalKeyboardKey.usbErrorRollOver",
  () => PhysicalKeyboardKey.usbErrorRollOver
);
var _physicalKeyboardKey_usbPostFail = MXFunctionInvoke(
  "PhysicalKeyboardKey.usbPostFail",
  () => PhysicalKeyboardKey.usbPostFail
);
var _physicalKeyboardKey_usbErrorUndefined = MXFunctionInvoke(
  "PhysicalKeyboardKey.usbErrorUndefined",
  () => PhysicalKeyboardKey.usbErrorUndefined
);
var _physicalKeyboardKey_keyA = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyA",
  () => PhysicalKeyboardKey.keyA
);
var _physicalKeyboardKey_keyB = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyB",
  () => PhysicalKeyboardKey.keyB
);
var _physicalKeyboardKey_keyC = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyC",
  () => PhysicalKeyboardKey.keyC
);
var _physicalKeyboardKey_keyD = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyD",
  () => PhysicalKeyboardKey.keyD
);
var _physicalKeyboardKey_keyE = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyE",
  () => PhysicalKeyboardKey.keyE
);
var _physicalKeyboardKey_keyF = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyF",
  () => PhysicalKeyboardKey.keyF
);
var _physicalKeyboardKey_keyG = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyG",
  () => PhysicalKeyboardKey.keyG
);
var _physicalKeyboardKey_keyH = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyH",
  () => PhysicalKeyboardKey.keyH
);
var _physicalKeyboardKey_keyI = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyI",
  () => PhysicalKeyboardKey.keyI
);
var _physicalKeyboardKey_keyJ = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyJ",
  () => PhysicalKeyboardKey.keyJ
);
var _physicalKeyboardKey_keyK = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyK",
  () => PhysicalKeyboardKey.keyK
);
var _physicalKeyboardKey_keyL = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyL",
  () => PhysicalKeyboardKey.keyL
);
var _physicalKeyboardKey_keyM = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyM",
  () => PhysicalKeyboardKey.keyM
);
var _physicalKeyboardKey_keyN = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyN",
  () => PhysicalKeyboardKey.keyN
);
var _physicalKeyboardKey_keyO = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyO",
  () => PhysicalKeyboardKey.keyO
);
var _physicalKeyboardKey_keyP = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyP",
  () => PhysicalKeyboardKey.keyP
);
var _physicalKeyboardKey_keyQ = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyQ",
  () => PhysicalKeyboardKey.keyQ
);
var _physicalKeyboardKey_keyR = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyR",
  () => PhysicalKeyboardKey.keyR
);
var _physicalKeyboardKey_keyS = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyS",
  () => PhysicalKeyboardKey.keyS
);
var _physicalKeyboardKey_keyT = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyT",
  () => PhysicalKeyboardKey.keyT
);
var _physicalKeyboardKey_keyU = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyU",
  () => PhysicalKeyboardKey.keyU
);
var _physicalKeyboardKey_keyV = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyV",
  () => PhysicalKeyboardKey.keyV
);
var _physicalKeyboardKey_keyW = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyW",
  () => PhysicalKeyboardKey.keyW
);
var _physicalKeyboardKey_keyX = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyX",
  () => PhysicalKeyboardKey.keyX
);
var _physicalKeyboardKey_keyY = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyY",
  () => PhysicalKeyboardKey.keyY
);
var _physicalKeyboardKey_keyZ = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyZ",
  () => PhysicalKeyboardKey.keyZ
);
var _physicalKeyboardKey_digit1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit1",
  () => PhysicalKeyboardKey.digit1
);
var _physicalKeyboardKey_digit2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit2",
  () => PhysicalKeyboardKey.digit2
);
var _physicalKeyboardKey_digit3 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit3",
  () => PhysicalKeyboardKey.digit3
);
var _physicalKeyboardKey_digit4 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit4",
  () => PhysicalKeyboardKey.digit4
);
var _physicalKeyboardKey_digit5 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit5",
  () => PhysicalKeyboardKey.digit5
);
var _physicalKeyboardKey_digit6 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit6",
  () => PhysicalKeyboardKey.digit6
);
var _physicalKeyboardKey_digit7 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit7",
  () => PhysicalKeyboardKey.digit7
);
var _physicalKeyboardKey_digit8 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit8",
  () => PhysicalKeyboardKey.digit8
);
var _physicalKeyboardKey_digit9 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit9",
  () => PhysicalKeyboardKey.digit9
);
var _physicalKeyboardKey_digit0 = MXFunctionInvoke(
  "PhysicalKeyboardKey.digit0",
  () => PhysicalKeyboardKey.digit0
);
var _physicalKeyboardKey_enter = MXFunctionInvoke(
  "PhysicalKeyboardKey.enter",
  () => PhysicalKeyboardKey.enter
);
var _physicalKeyboardKey_escape = MXFunctionInvoke(
  "PhysicalKeyboardKey.escape",
  () => PhysicalKeyboardKey.escape
);
var _physicalKeyboardKey_backspace = MXFunctionInvoke(
  "PhysicalKeyboardKey.backspace",
  () => PhysicalKeyboardKey.backspace
);
var _physicalKeyboardKey_tab = MXFunctionInvoke(
  "PhysicalKeyboardKey.tab",
  () => PhysicalKeyboardKey.tab
);
var _physicalKeyboardKey_space = MXFunctionInvoke(
  "PhysicalKeyboardKey.space",
  () => PhysicalKeyboardKey.space
);
var _physicalKeyboardKey_minus = MXFunctionInvoke(
  "PhysicalKeyboardKey.minus",
  () => PhysicalKeyboardKey.minus
);
var _physicalKeyboardKey_equal = MXFunctionInvoke(
  "PhysicalKeyboardKey.equal",
  () => PhysicalKeyboardKey.equal
);
var _physicalKeyboardKey_bracketLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.bracketLeft",
  () => PhysicalKeyboardKey.bracketLeft
);
var _physicalKeyboardKey_bracketRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.bracketRight",
  () => PhysicalKeyboardKey.bracketRight
);
var _physicalKeyboardKey_backslash = MXFunctionInvoke(
  "PhysicalKeyboardKey.backslash",
  () => PhysicalKeyboardKey.backslash
);
var _physicalKeyboardKey_semicolon = MXFunctionInvoke(
  "PhysicalKeyboardKey.semicolon",
  () => PhysicalKeyboardKey.semicolon
);
var _physicalKeyboardKey_quote = MXFunctionInvoke(
  "PhysicalKeyboardKey.quote",
  () => PhysicalKeyboardKey.quote
);
var _physicalKeyboardKey_backquote = MXFunctionInvoke(
  "PhysicalKeyboardKey.backquote",
  () => PhysicalKeyboardKey.backquote
);
var _physicalKeyboardKey_comma = MXFunctionInvoke(
  "PhysicalKeyboardKey.comma",
  () => PhysicalKeyboardKey.comma
);
var _physicalKeyboardKey_period = MXFunctionInvoke(
  "PhysicalKeyboardKey.period",
  () => PhysicalKeyboardKey.period
);
var _physicalKeyboardKey_slash = MXFunctionInvoke(
  "PhysicalKeyboardKey.slash",
  () => PhysicalKeyboardKey.slash
);
var _physicalKeyboardKey_capsLock = MXFunctionInvoke(
  "PhysicalKeyboardKey.capsLock",
  () => PhysicalKeyboardKey.capsLock
);
var _physicalKeyboardKey_f1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f1",
  () => PhysicalKeyboardKey.f1
);
var _physicalKeyboardKey_f2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f2",
  () => PhysicalKeyboardKey.f2
);
var _physicalKeyboardKey_f3 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f3",
  () => PhysicalKeyboardKey.f3
);
var _physicalKeyboardKey_f4 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f4",
  () => PhysicalKeyboardKey.f4
);
var _physicalKeyboardKey_f5 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f5",
  () => PhysicalKeyboardKey.f5
);
var _physicalKeyboardKey_f6 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f6",
  () => PhysicalKeyboardKey.f6
);
var _physicalKeyboardKey_f7 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f7",
  () => PhysicalKeyboardKey.f7
);
var _physicalKeyboardKey_f8 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f8",
  () => PhysicalKeyboardKey.f8
);
var _physicalKeyboardKey_f9 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f9",
  () => PhysicalKeyboardKey.f9
);
var _physicalKeyboardKey_f10 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f10",
  () => PhysicalKeyboardKey.f10
);
var _physicalKeyboardKey_f11 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f11",
  () => PhysicalKeyboardKey.f11
);
var _physicalKeyboardKey_f12 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f12",
  () => PhysicalKeyboardKey.f12
);
var _physicalKeyboardKey_printScreen = MXFunctionInvoke(
  "PhysicalKeyboardKey.printScreen",
  () => PhysicalKeyboardKey.printScreen
);
var _physicalKeyboardKey_scrollLock = MXFunctionInvoke(
  "PhysicalKeyboardKey.scrollLock",
  () => PhysicalKeyboardKey.scrollLock
);
var _physicalKeyboardKey_pause = MXFunctionInvoke(
  "PhysicalKeyboardKey.pause",
  () => PhysicalKeyboardKey.pause
);
var _physicalKeyboardKey_insert = MXFunctionInvoke(
  "PhysicalKeyboardKey.insert",
  () => PhysicalKeyboardKey.insert
);
var _physicalKeyboardKey_home = MXFunctionInvoke(
  "PhysicalKeyboardKey.home",
  () => PhysicalKeyboardKey.home
);
var _physicalKeyboardKey_pageUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.pageUp",
  () => PhysicalKeyboardKey.pageUp
);
var _physicalKeyboardKey_delete = MXFunctionInvoke(
  "PhysicalKeyboardKey.delete",
  () => PhysicalKeyboardKey.delete
);
var _physicalKeyboardKey_end = MXFunctionInvoke(
  "PhysicalKeyboardKey.end",
  () => PhysicalKeyboardKey.end
);
var _physicalKeyboardKey_pageDown = MXFunctionInvoke(
  "PhysicalKeyboardKey.pageDown",
  () => PhysicalKeyboardKey.pageDown
);
var _physicalKeyboardKey_arrowRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.arrowRight",
  () => PhysicalKeyboardKey.arrowRight
);
var _physicalKeyboardKey_arrowLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.arrowLeft",
  () => PhysicalKeyboardKey.arrowLeft
);
var _physicalKeyboardKey_arrowDown = MXFunctionInvoke(
  "PhysicalKeyboardKey.arrowDown",
  () => PhysicalKeyboardKey.arrowDown
);
var _physicalKeyboardKey_arrowUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.arrowUp",
  () => PhysicalKeyboardKey.arrowUp
);
var _physicalKeyboardKey_numLock = MXFunctionInvoke(
  "PhysicalKeyboardKey.numLock",
  () => PhysicalKeyboardKey.numLock
);
var _physicalKeyboardKey_numpadDivide = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadDivide",
  () => PhysicalKeyboardKey.numpadDivide
);
var _physicalKeyboardKey_numpadMultiply = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadMultiply",
  () => PhysicalKeyboardKey.numpadMultiply
);
var _physicalKeyboardKey_numpadSubtract = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadSubtract",
  () => PhysicalKeyboardKey.numpadSubtract
);
var _physicalKeyboardKey_numpadAdd = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadAdd",
  () => PhysicalKeyboardKey.numpadAdd
);
var _physicalKeyboardKey_numpadEnter = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadEnter",
  () => PhysicalKeyboardKey.numpadEnter
);
var _physicalKeyboardKey_numpad1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad1",
  () => PhysicalKeyboardKey.numpad1
);
var _physicalKeyboardKey_numpad2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad2",
  () => PhysicalKeyboardKey.numpad2
);
var _physicalKeyboardKey_numpad3 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad3",
  () => PhysicalKeyboardKey.numpad3
);
var _physicalKeyboardKey_numpad4 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad4",
  () => PhysicalKeyboardKey.numpad4
);
var _physicalKeyboardKey_numpad5 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad5",
  () => PhysicalKeyboardKey.numpad5
);
var _physicalKeyboardKey_numpad6 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad6",
  () => PhysicalKeyboardKey.numpad6
);
var _physicalKeyboardKey_numpad7 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad7",
  () => PhysicalKeyboardKey.numpad7
);
var _physicalKeyboardKey_numpad8 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad8",
  () => PhysicalKeyboardKey.numpad8
);
var _physicalKeyboardKey_numpad9 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad9",
  () => PhysicalKeyboardKey.numpad9
);
var _physicalKeyboardKey_numpad0 = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpad0",
  () => PhysicalKeyboardKey.numpad0
);
var _physicalKeyboardKey_numpadDecimal = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadDecimal",
  () => PhysicalKeyboardKey.numpadDecimal
);
var _physicalKeyboardKey_intlBackslash = MXFunctionInvoke(
  "PhysicalKeyboardKey.intlBackslash",
  () => PhysicalKeyboardKey.intlBackslash
);
var _physicalKeyboardKey_contextMenu = MXFunctionInvoke(
  "PhysicalKeyboardKey.contextMenu",
  () => PhysicalKeyboardKey.contextMenu
);
var _physicalKeyboardKey_power = MXFunctionInvoke(
  "PhysicalKeyboardKey.power",
  () => PhysicalKeyboardKey.power
);
var _physicalKeyboardKey_numpadEqual = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadEqual",
  () => PhysicalKeyboardKey.numpadEqual
);
var _physicalKeyboardKey_f13 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f13",
  () => PhysicalKeyboardKey.f13
);
var _physicalKeyboardKey_f14 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f14",
  () => PhysicalKeyboardKey.f14
);
var _physicalKeyboardKey_f15 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f15",
  () => PhysicalKeyboardKey.f15
);
var _physicalKeyboardKey_f16 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f16",
  () => PhysicalKeyboardKey.f16
);
var _physicalKeyboardKey_f17 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f17",
  () => PhysicalKeyboardKey.f17
);
var _physicalKeyboardKey_f18 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f18",
  () => PhysicalKeyboardKey.f18
);
var _physicalKeyboardKey_f19 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f19",
  () => PhysicalKeyboardKey.f19
);
var _physicalKeyboardKey_f20 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f20",
  () => PhysicalKeyboardKey.f20
);
var _physicalKeyboardKey_f21 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f21",
  () => PhysicalKeyboardKey.f21
);
var _physicalKeyboardKey_f22 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f22",
  () => PhysicalKeyboardKey.f22
);
var _physicalKeyboardKey_f23 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f23",
  () => PhysicalKeyboardKey.f23
);
var _physicalKeyboardKey_f24 = MXFunctionInvoke(
  "PhysicalKeyboardKey.f24",
  () => PhysicalKeyboardKey.f24
);
var _physicalKeyboardKey_open = MXFunctionInvoke(
  "PhysicalKeyboardKey.open",
  () => PhysicalKeyboardKey.open
);
var _physicalKeyboardKey_help = MXFunctionInvoke(
  "PhysicalKeyboardKey.help",
  () => PhysicalKeyboardKey.help
);
var _physicalKeyboardKey_select = MXFunctionInvoke(
  "PhysicalKeyboardKey.select",
  () => PhysicalKeyboardKey.select
);
var _physicalKeyboardKey_again = MXFunctionInvoke(
  "PhysicalKeyboardKey.again",
  () => PhysicalKeyboardKey.again
);
var _physicalKeyboardKey_undo = MXFunctionInvoke(
  "PhysicalKeyboardKey.undo",
  () => PhysicalKeyboardKey.undo
);
var _physicalKeyboardKey_cut = MXFunctionInvoke(
  "PhysicalKeyboardKey.cut",
  () => PhysicalKeyboardKey.cut
);
var _physicalKeyboardKey_copy = MXFunctionInvoke(
  "PhysicalKeyboardKey.copy",
  () => PhysicalKeyboardKey.copy
);
var _physicalKeyboardKey_paste = MXFunctionInvoke(
  "PhysicalKeyboardKey.paste",
  () => PhysicalKeyboardKey.paste
);
var _physicalKeyboardKey_find = MXFunctionInvoke(
  "PhysicalKeyboardKey.find",
  () => PhysicalKeyboardKey.find
);
var _physicalKeyboardKey_audioVolumeMute = MXFunctionInvoke(
  "PhysicalKeyboardKey.audioVolumeMute",
  () => PhysicalKeyboardKey.audioVolumeMute
);
var _physicalKeyboardKey_audioVolumeUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.audioVolumeUp",
  () => PhysicalKeyboardKey.audioVolumeUp
);
var _physicalKeyboardKey_audioVolumeDown = MXFunctionInvoke(
  "PhysicalKeyboardKey.audioVolumeDown",
  () => PhysicalKeyboardKey.audioVolumeDown
);
var _physicalKeyboardKey_numpadComma = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadComma",
  () => PhysicalKeyboardKey.numpadComma
);
var _physicalKeyboardKey_intlRo = MXFunctionInvoke(
  "PhysicalKeyboardKey.intlRo",
  () => PhysicalKeyboardKey.intlRo
);
var _physicalKeyboardKey_kanaMode = MXFunctionInvoke(
  "PhysicalKeyboardKey.kanaMode",
  () => PhysicalKeyboardKey.kanaMode
);
var _physicalKeyboardKey_intlYen = MXFunctionInvoke(
  "PhysicalKeyboardKey.intlYen",
  () => PhysicalKeyboardKey.intlYen
);
var _physicalKeyboardKey_convert = MXFunctionInvoke(
  "PhysicalKeyboardKey.convert",
  () => PhysicalKeyboardKey.convert
);
var _physicalKeyboardKey_nonConvert = MXFunctionInvoke(
  "PhysicalKeyboardKey.nonConvert",
  () => PhysicalKeyboardKey.nonConvert
);
var _physicalKeyboardKey_lang1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.lang1",
  () => PhysicalKeyboardKey.lang1
);
var _physicalKeyboardKey_lang2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.lang2",
  () => PhysicalKeyboardKey.lang2
);
var _physicalKeyboardKey_lang3 = MXFunctionInvoke(
  "PhysicalKeyboardKey.lang3",
  () => PhysicalKeyboardKey.lang3
);
var _physicalKeyboardKey_lang4 = MXFunctionInvoke(
  "PhysicalKeyboardKey.lang4",
  () => PhysicalKeyboardKey.lang4
);
var _physicalKeyboardKey_lang5 = MXFunctionInvoke(
  "PhysicalKeyboardKey.lang5",
  () => PhysicalKeyboardKey.lang5
);
var _physicalKeyboardKey_abort = MXFunctionInvoke(
  "PhysicalKeyboardKey.abort",
  () => PhysicalKeyboardKey.abort
);
var _physicalKeyboardKey_props = MXFunctionInvoke(
  "PhysicalKeyboardKey.props",
  () => PhysicalKeyboardKey.props
);
var _physicalKeyboardKey_numpadParenLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadParenLeft",
  () => PhysicalKeyboardKey.numpadParenLeft
);
var _physicalKeyboardKey_numpadParenRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadParenRight",
  () => PhysicalKeyboardKey.numpadParenRight
);
var _physicalKeyboardKey_numpadBackspace = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadBackspace",
  () => PhysicalKeyboardKey.numpadBackspace
);
var _physicalKeyboardKey_numpadMemoryStore = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadMemoryStore",
  () => PhysicalKeyboardKey.numpadMemoryStore
);
var _physicalKeyboardKey_numpadMemoryRecall = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadMemoryRecall",
  () => PhysicalKeyboardKey.numpadMemoryRecall
);
var _physicalKeyboardKey_numpadMemoryClear = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadMemoryClear",
  () => PhysicalKeyboardKey.numpadMemoryClear
);
var _physicalKeyboardKey_numpadMemoryAdd = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadMemoryAdd",
  () => PhysicalKeyboardKey.numpadMemoryAdd
);
var _physicalKeyboardKey_numpadMemorySubtract = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadMemorySubtract",
  () => PhysicalKeyboardKey.numpadMemorySubtract
);
var _physicalKeyboardKey_numpadSignChange = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadSignChange",
  () => PhysicalKeyboardKey.numpadSignChange
);
var _physicalKeyboardKey_numpadClear = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadClear",
  () => PhysicalKeyboardKey.numpadClear
);
var _physicalKeyboardKey_numpadClearEntry = MXFunctionInvoke(
  "PhysicalKeyboardKey.numpadClearEntry",
  () => PhysicalKeyboardKey.numpadClearEntry
);
var _physicalKeyboardKey_controlLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.controlLeft",
  () => PhysicalKeyboardKey.controlLeft
);
var _physicalKeyboardKey_shiftLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.shiftLeft",
  () => PhysicalKeyboardKey.shiftLeft
);
var _physicalKeyboardKey_altLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.altLeft",
  () => PhysicalKeyboardKey.altLeft
);
var _physicalKeyboardKey_metaLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.metaLeft",
  () => PhysicalKeyboardKey.metaLeft
);
var _physicalKeyboardKey_controlRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.controlRight",
  () => PhysicalKeyboardKey.controlRight
);
var _physicalKeyboardKey_shiftRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.shiftRight",
  () => PhysicalKeyboardKey.shiftRight
);
var _physicalKeyboardKey_altRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.altRight",
  () => PhysicalKeyboardKey.altRight
);
var _physicalKeyboardKey_metaRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.metaRight",
  () => PhysicalKeyboardKey.metaRight
);
var _physicalKeyboardKey_info = MXFunctionInvoke(
  "PhysicalKeyboardKey.info",
  () => PhysicalKeyboardKey.info
);
var _physicalKeyboardKey_closedCaptionToggle = MXFunctionInvoke(
  "PhysicalKeyboardKey.closedCaptionToggle",
  () => PhysicalKeyboardKey.closedCaptionToggle
);
var _physicalKeyboardKey_brightnessUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.brightnessUp",
  () => PhysicalKeyboardKey.brightnessUp
);
var _physicalKeyboardKey_brightnessDown = MXFunctionInvoke(
  "PhysicalKeyboardKey.brightnessDown",
  () => PhysicalKeyboardKey.brightnessDown
);
var _physicalKeyboardKey_brightnessToggle = MXFunctionInvoke(
  "PhysicalKeyboardKey.brightnessToggle",
  () => PhysicalKeyboardKey.brightnessToggle
);
var _physicalKeyboardKey_brightnessMinimum = MXFunctionInvoke(
  "PhysicalKeyboardKey.brightnessMinimum",
  () => PhysicalKeyboardKey.brightnessMinimum
);
var _physicalKeyboardKey_brightnessMaximum = MXFunctionInvoke(
  "PhysicalKeyboardKey.brightnessMaximum",
  () => PhysicalKeyboardKey.brightnessMaximum
);
var _physicalKeyboardKey_brightnessAuto = MXFunctionInvoke(
  "PhysicalKeyboardKey.brightnessAuto",
  () => PhysicalKeyboardKey.brightnessAuto
);
var _physicalKeyboardKey_kbdIllumUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.kbdIllumUp",
  () => PhysicalKeyboardKey.kbdIllumUp
);
var _physicalKeyboardKey_kbdIllumDown = MXFunctionInvoke(
  "PhysicalKeyboardKey.kbdIllumDown",
  () => PhysicalKeyboardKey.kbdIllumDown
);
var _physicalKeyboardKey_mediaLast = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaLast",
  () => PhysicalKeyboardKey.mediaLast
);
var _physicalKeyboardKey_launchPhone = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchPhone",
  () => PhysicalKeyboardKey.launchPhone
);
var _physicalKeyboardKey_programGuide = MXFunctionInvoke(
  "PhysicalKeyboardKey.programGuide",
  () => PhysicalKeyboardKey.programGuide
);
var _physicalKeyboardKey_exit = MXFunctionInvoke(
  "PhysicalKeyboardKey.exit",
  () => PhysicalKeyboardKey.exit
);
var _physicalKeyboardKey_channelUp = MXFunctionInvoke(
  "PhysicalKeyboardKey.channelUp",
  () => PhysicalKeyboardKey.channelUp
);
var _physicalKeyboardKey_channelDown = MXFunctionInvoke(
  "PhysicalKeyboardKey.channelDown",
  () => PhysicalKeyboardKey.channelDown
);
var _physicalKeyboardKey_mediaPlay = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaPlay",
  () => PhysicalKeyboardKey.mediaPlay
);
var _physicalKeyboardKey_mediaPause = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaPause",
  () => PhysicalKeyboardKey.mediaPause
);
var _physicalKeyboardKey_mediaRecord = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaRecord",
  () => PhysicalKeyboardKey.mediaRecord
);
var _physicalKeyboardKey_mediaFastForward = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaFastForward",
  () => PhysicalKeyboardKey.mediaFastForward
);
var _physicalKeyboardKey_mediaRewind = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaRewind",
  () => PhysicalKeyboardKey.mediaRewind
);
var _physicalKeyboardKey_mediaTrackNext = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaTrackNext",
  () => PhysicalKeyboardKey.mediaTrackNext
);
var _physicalKeyboardKey_mediaTrackPrevious = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaTrackPrevious",
  () => PhysicalKeyboardKey.mediaTrackPrevious
);
var _physicalKeyboardKey_mediaStop = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaStop",
  () => PhysicalKeyboardKey.mediaStop
);
var _physicalKeyboardKey_eject = MXFunctionInvoke(
  "PhysicalKeyboardKey.eject",
  () => PhysicalKeyboardKey.eject
);
var _physicalKeyboardKey_mediaPlayPause = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaPlayPause",
  () => PhysicalKeyboardKey.mediaPlayPause
);
var _physicalKeyboardKey_speechInputToggle = MXFunctionInvoke(
  "PhysicalKeyboardKey.speechInputToggle",
  () => PhysicalKeyboardKey.speechInputToggle
);
var _physicalKeyboardKey_bassBoost = MXFunctionInvoke(
  "PhysicalKeyboardKey.bassBoost",
  () => PhysicalKeyboardKey.bassBoost
);
var _physicalKeyboardKey_mediaSelect = MXFunctionInvoke(
  "PhysicalKeyboardKey.mediaSelect",
  () => PhysicalKeyboardKey.mediaSelect
);
var _physicalKeyboardKey_launchWordProcessor = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchWordProcessor",
  () => PhysicalKeyboardKey.launchWordProcessor
);
var _physicalKeyboardKey_launchSpreadsheet = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchSpreadsheet",
  () => PhysicalKeyboardKey.launchSpreadsheet
);
var _physicalKeyboardKey_launchMail = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchMail",
  () => PhysicalKeyboardKey.launchMail
);
var _physicalKeyboardKey_launchContacts = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchContacts",
  () => PhysicalKeyboardKey.launchContacts
);
var _physicalKeyboardKey_launchCalendar = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchCalendar",
  () => PhysicalKeyboardKey.launchCalendar
);
var _physicalKeyboardKey_launchApp2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchApp2",
  () => PhysicalKeyboardKey.launchApp2
);
var _physicalKeyboardKey_launchApp1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchApp1",
  () => PhysicalKeyboardKey.launchApp1
);
var _physicalKeyboardKey_launchInternetBrowser = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchInternetBrowser",
  () => PhysicalKeyboardKey.launchInternetBrowser
);
var _physicalKeyboardKey_logOff = MXFunctionInvoke(
  "PhysicalKeyboardKey.logOff",
  () => PhysicalKeyboardKey.logOff
);
var _physicalKeyboardKey_lockScreen = MXFunctionInvoke(
  "PhysicalKeyboardKey.lockScreen",
  () => PhysicalKeyboardKey.lockScreen
);
var _physicalKeyboardKey_launchControlPanel = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchControlPanel",
  () => PhysicalKeyboardKey.launchControlPanel
);
var _physicalKeyboardKey_selectTask = MXFunctionInvoke(
  "PhysicalKeyboardKey.selectTask",
  () => PhysicalKeyboardKey.selectTask
);
var _physicalKeyboardKey_launchDocuments = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchDocuments",
  () => PhysicalKeyboardKey.launchDocuments
);
var _physicalKeyboardKey_spellCheck = MXFunctionInvoke(
  "PhysicalKeyboardKey.spellCheck",
  () => PhysicalKeyboardKey.spellCheck
);
var _physicalKeyboardKey_launchKeyboardLayout = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchKeyboardLayout",
  () => PhysicalKeyboardKey.launchKeyboardLayout
);
var _physicalKeyboardKey_launchScreenSaver = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchScreenSaver",
  () => PhysicalKeyboardKey.launchScreenSaver
);
var _physicalKeyboardKey_launchAssistant = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchAssistant",
  () => PhysicalKeyboardKey.launchAssistant
);
var _physicalKeyboardKey_launchAudioBrowser = MXFunctionInvoke(
  "PhysicalKeyboardKey.launchAudioBrowser",
  () => PhysicalKeyboardKey.launchAudioBrowser
);
var _physicalKeyboardKey_newKey = MXFunctionInvoke(
  "PhysicalKeyboardKey.newKey",
  () => PhysicalKeyboardKey.newKey
);
var _physicalKeyboardKey_close = MXFunctionInvoke(
  "PhysicalKeyboardKey.close",
  () => PhysicalKeyboardKey.close
);
var _physicalKeyboardKey_save = MXFunctionInvoke(
  "PhysicalKeyboardKey.save",
  () => PhysicalKeyboardKey.save
);
var _physicalKeyboardKey_print = MXFunctionInvoke(
  "PhysicalKeyboardKey.print",
  () => PhysicalKeyboardKey.print
);
var _physicalKeyboardKey_browserSearch = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserSearch",
  () => PhysicalKeyboardKey.browserSearch
);
var _physicalKeyboardKey_browserHome = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserHome",
  () => PhysicalKeyboardKey.browserHome
);
var _physicalKeyboardKey_browserBack = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserBack",
  () => PhysicalKeyboardKey.browserBack
);
var _physicalKeyboardKey_browserForward = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserForward",
  () => PhysicalKeyboardKey.browserForward
);
var _physicalKeyboardKey_browserStop = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserStop",
  () => PhysicalKeyboardKey.browserStop
);
var _physicalKeyboardKey_browserRefresh = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserRefresh",
  () => PhysicalKeyboardKey.browserRefresh
);
var _physicalKeyboardKey_browserFavorites = MXFunctionInvoke(
  "PhysicalKeyboardKey.browserFavorites",
  () => PhysicalKeyboardKey.browserFavorites
);
var _physicalKeyboardKey_zoomIn = MXFunctionInvoke(
  "PhysicalKeyboardKey.zoomIn",
  () => PhysicalKeyboardKey.zoomIn
);
var _physicalKeyboardKey_zoomOut = MXFunctionInvoke(
  "PhysicalKeyboardKey.zoomOut",
  () => PhysicalKeyboardKey.zoomOut
);
var _physicalKeyboardKey_zoomToggle = MXFunctionInvoke(
  "PhysicalKeyboardKey.zoomToggle",
  () => PhysicalKeyboardKey.zoomToggle
);
var _physicalKeyboardKey_redo = MXFunctionInvoke(
  "PhysicalKeyboardKey.redo",
  () => PhysicalKeyboardKey.redo
);
var _physicalKeyboardKey_mailReply = MXFunctionInvoke(
  "PhysicalKeyboardKey.mailReply",
  () => PhysicalKeyboardKey.mailReply
);
var _physicalKeyboardKey_mailForward = MXFunctionInvoke(
  "PhysicalKeyboardKey.mailForward",
  () => PhysicalKeyboardKey.mailForward
);
var _physicalKeyboardKey_mailSend = MXFunctionInvoke(
  "PhysicalKeyboardKey.mailSend",
  () => PhysicalKeyboardKey.mailSend
);
var _physicalKeyboardKey_keyboardLayoutSelect = MXFunctionInvoke(
  "PhysicalKeyboardKey.keyboardLayoutSelect",
  () => PhysicalKeyboardKey.keyboardLayoutSelect
);
var _physicalKeyboardKey_showAllWindows = MXFunctionInvoke(
  "PhysicalKeyboardKey.showAllWindows",
  () => PhysicalKeyboardKey.showAllWindows
);
var _physicalKeyboardKey_gameButton1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton1",
  () => PhysicalKeyboardKey.gameButton1
);
var _physicalKeyboardKey_gameButton2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton2",
  () => PhysicalKeyboardKey.gameButton2
);
var _physicalKeyboardKey_gameButton3 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton3",
  () => PhysicalKeyboardKey.gameButton3
);
var _physicalKeyboardKey_gameButton4 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton4",
  () => PhysicalKeyboardKey.gameButton4
);
var _physicalKeyboardKey_gameButton5 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton5",
  () => PhysicalKeyboardKey.gameButton5
);
var _physicalKeyboardKey_gameButton6 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton6",
  () => PhysicalKeyboardKey.gameButton6
);
var _physicalKeyboardKey_gameButton7 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton7",
  () => PhysicalKeyboardKey.gameButton7
);
var _physicalKeyboardKey_gameButton8 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton8",
  () => PhysicalKeyboardKey.gameButton8
);
var _physicalKeyboardKey_gameButton9 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton9",
  () => PhysicalKeyboardKey.gameButton9
);
var _physicalKeyboardKey_gameButton10 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton10",
  () => PhysicalKeyboardKey.gameButton10
);
var _physicalKeyboardKey_gameButton11 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton11",
  () => PhysicalKeyboardKey.gameButton11
);
var _physicalKeyboardKey_gameButton12 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton12",
  () => PhysicalKeyboardKey.gameButton12
);
var _physicalKeyboardKey_gameButton13 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton13",
  () => PhysicalKeyboardKey.gameButton13
);
var _physicalKeyboardKey_gameButton14 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton14",
  () => PhysicalKeyboardKey.gameButton14
);
var _physicalKeyboardKey_gameButton15 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton15",
  () => PhysicalKeyboardKey.gameButton15
);
var _physicalKeyboardKey_gameButton16 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButton16",
  () => PhysicalKeyboardKey.gameButton16
);
var _physicalKeyboardKey_gameButtonA = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonA",
  () => PhysicalKeyboardKey.gameButtonA
);
var _physicalKeyboardKey_gameButtonB = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonB",
  () => PhysicalKeyboardKey.gameButtonB
);
var _physicalKeyboardKey_gameButtonC = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonC",
  () => PhysicalKeyboardKey.gameButtonC
);
var _physicalKeyboardKey_gameButtonLeft1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonLeft1",
  () => PhysicalKeyboardKey.gameButtonLeft1
);
var _physicalKeyboardKey_gameButtonLeft2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonLeft2",
  () => PhysicalKeyboardKey.gameButtonLeft2
);
var _physicalKeyboardKey_gameButtonMode = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonMode",
  () => PhysicalKeyboardKey.gameButtonMode
);
var _physicalKeyboardKey_gameButtonRight1 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonRight1",
  () => PhysicalKeyboardKey.gameButtonRight1
);
var _physicalKeyboardKey_gameButtonRight2 = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonRight2",
  () => PhysicalKeyboardKey.gameButtonRight2
);
var _physicalKeyboardKey_gameButtonSelect = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonSelect",
  () => PhysicalKeyboardKey.gameButtonSelect
);
var _physicalKeyboardKey_gameButtonStart = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonStart",
  () => PhysicalKeyboardKey.gameButtonStart
);
var _physicalKeyboardKey_gameButtonThumbLeft = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonThumbLeft",
  () => PhysicalKeyboardKey.gameButtonThumbLeft
);
var _physicalKeyboardKey_gameButtonThumbRight = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonThumbRight",
  () => PhysicalKeyboardKey.gameButtonThumbRight
);
var _physicalKeyboardKey_gameButtonX = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonX",
  () => PhysicalKeyboardKey.gameButtonX
);
var _physicalKeyboardKey_gameButtonY = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonY",
  () => PhysicalKeyboardKey.gameButtonY
);
var _physicalKeyboardKey_gameButtonZ = MXFunctionInvoke(
  "PhysicalKeyboardKey.gameButtonZ",
  () => PhysicalKeyboardKey.gameButtonZ
);
var _physicalKeyboardKey_fn = MXFunctionInvoke(
  "PhysicalKeyboardKey.fn",
  () => PhysicalKeyboardKey.fn
);
